{"version":3,"sources":["./src/app/dashboard/functions/fix-nft-limbo/fix-nft-limbo.module.ts","./src/app/dashboard/functions/fix-nft-limbo/fix-nft-limbo-routing.modules.ts","./src/app/dashboard/functions/fix-nft-limbo/fix-nft-limbo.component.ts","./src/app/dashboard/functions/fix-nft-limbo/fix-nft-limbo.component.html"],"names":[],"mappings":"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","file":"fix-nft-limbo-fix-nft-limbo-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FixNftLimboRoutingModule } from './fix-nft-limbo-routing.modules';\r\nimport { FixNftLimboComponent } from './fix-nft-limbo.component';\r\nimport { LottieModule } from 'ngx-lottie';\r\n\r\n@NgModule({\r\n  declarations: [FixNftLimboComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FixNftLimboRoutingModule,\r\n    LottieModule\r\n  ]\r\n})\r\nexport class FixNftLimboModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FixNftLimboComponent } from './fix-nft-limbo.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n   path: '', \r\n   component: FixNftLimboComponent\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FixNftLimboRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AnimationItem } from 'lottie-web';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\n\r\n@Component({\r\n  selector: 'app-fix-nft-limbo',\r\n  templateUrl: './fix-nft-limbo.component.html',\r\n  styleUrls: ['./fix-nft-limbo.component.scss']\r\n})\r\nexport class FixNftLimboComponent implements OnInit {\r\n  type: string;\r\n  userSky: string;\r\n  userLocal: string;\r\n  payload: any;\r\n  fixLim: any;\r\n  goTODash: boolean = false;\r\n  showLoader : boolean = false;\r\n  options: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/cloud_loading.json'\r\n  };\r\n\r\n  constructor( private api : ApiService,\r\n    public router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fixNftLimbo()\r\n  }\r\n  async fixNftLimbo(){\r\n    try{\r\n      var data = {\r\n        name : \"NFTs\"\r\n      }\r\n      let response : any = await this.api.fixlimbo(data);\r\n      if(response.status === \"success\"){\r\n        this.doCheckFixNftLimbo(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n  async doCheckFixNftLimbo(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.fixLim = this.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.goTODash = true;\r\n        } else {\r\n          this.goTODash = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheckFixNftLimbo(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n\r\n  showLoading(state): void {\r\n    if (state) {\r\n      this.showLoader = true;\r\n    } else {\r\n      this.showLoader = false;\r\n    }\r\n  }\r\n\r\n  animationCreated(animationItem: AnimationItem): void {\r\n    console.log(animationItem);\r\n  }\r\n\r\n}\r\n","<div class=\"transWrapper\">\r\n    <div class=\"headerbackWrap\">\r\n        <a href=\"javascript:;\" routerLink=\"/dashboard/home\" class=\"backBtnInHeader\"><img src=\"assets/arrow.svg\"\r\n                alt=\"\"></a>\r\n        <span class=\"titleOne\">Find Unprocessed Coins</span>\r\n    </div>\r\n    <div class=\"gap20\"></div>\r\n    <div class=\"transBody\">\r\n        <p class=\"subTitleTwo\">Find your unprocessed coins.</p>\r\n        <div class=\"lineSection\">\r\n            <div *ngIf=\"!goTODash\">\r\n                <div class=\"progressWrap\">\r\n                    <div class=\"progress\">\r\n                        <div class=\"progress-bar progress-bar-striped\" role=\"progressbar\" style=\"background-color: green!important;\"\r\n                        [ngStyle]=\"{'width': fixLim?.progress < 10 ? 10 + fixLim?.progress + '%' : (fixLim?.progress - 5) + '%'}\"\r\n                        aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\">Checking your Wallet</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"formField\" *ngIf=\"fixLim?.progress == '100' && goTODash\">\r\n                    <div class=\"checkboxInpHolder\">\r\n                        <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Unprocessed\r\n                            coins are now processed.</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"gap10\"></div>\r\n            <div class=\"fixLimboTwo\" *ngIf=\"fixLim?.status === 'completed'\">\r\n                <div class=\"healthList\">\r\n                    <div class=\"healthListDiv\">\r\n                        <p>Total Unprocessed Coins:</p>\r\n                        <h6>{{fixLim?.data?.total_fixed + fixLim?.data?.total_skipped + fixLim?.data?.total_errors}}\r\n                        </h6>\r\n                    </div>\r\n                    <div class=\"healthListDiv\">\r\n                        <p>Coin Successfully Processed:</p>\r\n                        <h6>{{fixLim?.data?.total_fixed}}</h6>\r\n                    </div>\r\n                    <div class=\"healthListDiv\">\r\n                        <p>Total Coins Skipped:</p>\r\n                        <h6>{{fixLim?.data?.total_skipped}}</h6>\r\n                    </div>\r\n                    <div class=\"healthListDiv\">\r\n                        <p>Total Errors:</p>\r\n                        <h6>{{fixLim?.data?.total_errors}}</h6>\r\n                    </div>\r\n                    <!-- <div class=\"healthListDiv\">\r\n                        <p>Total fixes made <span>(number of times RAIDA servers that fixed a coin)</span></p>\r\n                        <h6>{{fixLim?.data?.total_fixes_made}}</h6>\r\n                    </div>\r\n                    <div class=\"healthListDiv\">\r\n                        <p>Total fixes failed <span>(number of times RAIDA servers did not fix a coin)</span></p>\r\n                        <h6>{{fixLim?.data?.total_fixes_failed}}</h6>\r\n                    </div> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"transBottomFooter\">\r\n        <button class=\"btnCustomBlue\" [ngClass]=\"{'btnDisable': goTODash === false}\"\r\n            (click)=\"goTODash ? router.navigate(['/dashboard/create-nft-gallery']) : ''\">Close</button>\r\n    </div>\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}