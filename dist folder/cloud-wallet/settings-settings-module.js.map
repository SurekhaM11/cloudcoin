{"version":3,"sources":["./src/app/dashboard/settings/settings-routing.module.ts","./src/app/dashboard/settings/settings.module.ts","./src/app/dashboard/settings/settings.component.ts","./src/app/dashboard/settings/settings.component.html"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SettingsComponent } from './settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SettingsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingsRoutingModule } from './settings-routing.module';\r\nimport { SettingsComponent } from './settings.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport { LottieModule } from 'ngx-lottie';\r\n@NgModule({\r\n  declarations: [SettingsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SettingsRoutingModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    LottieModule,\r\n    MatSliderModule\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n","import { EventListenerFocusTrapInertStrategy } from '@angular/cdk/a11y';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AnimationItem } from 'lottie-web';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  nftSettingsForm: FormGroup;\r\n  public generaltab: boolean;\r\n  public historytab: boolean;\r\n  public performtab: boolean;\r\n  public recoverTab: boolean;\r\n  public healthChoose: string;\r\n  public fixSkyvault: boolean = false;\r\n  public passkeyImage: any = \"\";\r\n  public tabSelector: string;\r\n  public cSelectorImg: string;\r\n  public cSelectorText: string;\r\n  public customSelectorOpen: boolean;\r\n  public cSelectorImgThree: string;\r\n  public cSelectorTextThree: string;\r\n  public customSelectorOpenThree: boolean;\r\n  public deleteUserModal: boolean;\r\n  public cSelectorImgFour: string;\r\n  public cSelectorTextFour: string;\r\n  public customSelectorOpenFour: boolean\r\n  public existingPswShow: boolean;\r\n  public newPswShow: boolean;\r\n  public backupExtPswShow: boolean;\r\n  public skyHealthProgress: boolean = false;\r\n  showLoader: boolean = false;\r\n  show: boolean = false;\r\n  show2: boolean = false;\r\n  file: any;\r\n  public removeProModal: boolean;\r\n  public cSelectorImgFive: string;\r\n  public cSelectorTextFive: string;\r\n  public customSelectorOpenFive: boolean;\r\n  public customSelectorOpenSix: boolean;\r\n  public cSelectorImgSix: string;\r\n  public cSelectorTextSix: string;\r\n  public removeProModalTwo: boolean;\r\n  public customSelectorOpenSeven: boolean;\r\n  public cSelectorImgSeven: string;\r\n  public cSelectorTextSeven: string;\r\n  public customSelectorOpenEight: boolean;\r\n  public cSelectorImgEight: string;\r\n  public cSelectorTextEight: string;\r\n  public customSelectorOpenNine: boolean;\r\n  public cSelectorImgNine: string;\r\n  public cSelectorTextNine: string;\r\n  public customSelectorOpenTen: boolean;\r\n  public cSelectorImgTen: string;\r\n  public cSelectorTextTen: string;\r\n  public customSelectorOpenEleven: boolean;\r\n  public cSelectorImgEleven: string;\r\n  public cSelectorTextEleven: string;\r\n  public health: boolean = false;\r\n  public errorInfo: boolean = false;\r\n  public settings: boolean = false;\r\n  public isSky: boolean;\r\n  public all: any;\r\n  public req: any;\r\n  public max: any;\r\n  public echo: any;\r\n  public allSky: any;\r\n  public fixProg: any\r\n  public goTODash: boolean = false;\r\n  public healthProg: any;\r\n  public latencies: any;\r\n  public isTimeout: boolean = false;\r\n  deleteForm: FormGroup;\r\n  healthProgress: boolean = false;\r\n  public deleteCheck: boolean = false;\r\n  payload: any;\r\n  frackContinue: boolean = false;\r\n  fixProgress: boolean = false;\r\n  loadingMessage: string = '';\r\n  options: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/cloud_loading.json'\r\n  };\r\n  nftsettingsform: any;\r\n  regexp: string;\r\n  upload_url: any;\r\n  secret_key: any;\r\n  api_key: any;\r\n  dname: any;\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private actRoute: ActivatedRoute,\r\n  ) {\r\n    this.generaltab = false;\r\n    this.historytab = false;\r\n    this.performtab = true;\r\n    this.recoverTab = false;\r\n    this.tabSelector = 'performance';\r\n    this.cSelectorImg = 'assets/usd.svg';\r\n    this.cSelectorText = 'USD';\r\n    this.customSelectorOpen = false;\r\n    this.cSelectorImgThree = '';\r\n    this.cSelectorTextThree = 'Select a wallet';\r\n    this.customSelectorOpenThree = false;\r\n    this.deleteUserModal = false;\r\n    this.cSelectorImgFour = '';\r\n    this.cSelectorTextFour = 'Select a wallet';\r\n    this.customSelectorOpenFour = false;\r\n    this.removeProModal = false;\r\n    this.cSelectorImgFive = '';\r\n    this.cSelectorTextFive = 'Select a wallet';\r\n    this.customSelectorOpenFive = false;\r\n    this.customSelectorOpenSix = false;\r\n    this.cSelectorImgSix = '';\r\n    this.cSelectorTextSix = 'Select a wallet';\r\n    this.removeProModalTwo = false;\r\n    this.customSelectorOpenSeven = false;\r\n    this.cSelectorImgSeven = '';\r\n    this.cSelectorTextSeven = 'Select a wallet';\r\n    this.customSelectorOpenEight = false;\r\n    this.cSelectorImgEight = '';\r\n    this.cSelectorTextEight = 'Select a wallet';\r\n    this.customSelectorOpenNine = false;\r\n    this.cSelectorImgNine = '';\r\n    this.cSelectorTextNine = 'Select a wallet';\r\n    this.customSelectorOpenTen = false;\r\n    this.cSelectorImgTen = '';\r\n    this.cSelectorTextTen = 'Select a wallet';\r\n    this.customSelectorOpenEleven = false;\r\n    this.cSelectorImgEleven = '';\r\n    this.cSelectorTextEleven = 'Select a SkyVault';\r\n    this.existingPswShow = true;\r\n    this.newPswShow = true;\r\n    this.backupExtPswShow = true;\r\n    this.deleteForm = this.fb.group({\r\n      check2: ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.regexp = \"^(?:[a-zA-Z0-9\\-][a-zA-Z0-9\\-]{0,61})*([\\.]{1,1}[a-z]{2,})+$\";\r\n    this.nftSettingsForm = new FormGroup({\r\n      'dnsname': new FormControl('', Validators.pattern(this.regexp)),\r\n      'url': new FormControl(this.upload_url, [Validators.required]),\r\n      'secretkey': new FormControl(this.secret_key, [Validators.required]),\r\n      'apikey': new FormControl(this.api_key, [Validators.required]),\r\n    });\r\n    this.getEcho();\r\n    this.getAllwallet();\r\n    this.getSetting();\r\n    // this.getAllSky();\r\n    this.getList();\r\n    this.getConfDetails();\r\n  }\r\n\r\n  async onSubmit(form: FormGroup) {\r\n    console.log(this.nftSettingsForm)\r\n    this.uploadConfFile();\r\n  }\r\n\r\n  isValidInput(value: any) {\r\n    return this.nftSettingsForm.controls[value].invalid &&\r\n      (this.nftSettingsForm.controls[value].dirty || this.nftSettingsForm.controls[value].touched);\r\n  }\r\n\r\n  async getEcho() {\r\n    this.errorInfo = false;\r\n    this.payload = null;\r\n    try {\r\n      let response: any = await this.api.raidaEcho();\r\n      if (response) {\r\n        this.payload = response.payload;\r\n        this.doTaskPoll(this.payload?.id);\r\n      }\r\n    }\r\n    catch (e) {\r\n      Swal.fire({\r\n        title: 'Raida servers disconnected!',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'SYNC',\r\n      }).then((result) => {\r\n        if (result.value) {\r\n          {\r\n            this.getEcho();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async doTaskPoll(taskID: any) {\r\n    let task: any = await this.api.doTaskPoll(taskID);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"completed\") {\r\n        this.latencies = this.payload?.data?.latencies;\r\n        var item = this.latencies.filter(x => x === 0);\r\n        if (item?.length !== 0) {\r\n          this.isTimeout = true;\r\n        }\r\n        // let data = this.payload.data;\r\n        // let h = \"\";\r\n        // for (let i = 0; i < data.pownarray.length; i++) {\r\n        //   let st = data.pownarray[i]\r\n        //   if (st != 1) {\r\n        //     h += \"<span class='rf'>\" + i + \"</span>\"\r\n        //   } else {\r\n        //     h += \"<span class='pf'>\" + i + \"</span>\"\r\n        //   }\r\n        // }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doTaskPoll(taskID)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  animationCreated(animationItem: AnimationItem): void {\r\n    console.log(animationItem);\r\n  }\r\n\r\n  async getSetting() {\r\n    let response: any = await this.api.setting();\r\n    if (response.status == 'success') {\r\n      this.req = response.payload?.default_timeout_mult;\r\n      this.echo = response.payload?.echo_timeout_mult;\r\n      this.max = response.payload?.max_notes;\r\n    }\r\n  }\r\n\r\n  async getAllwallet() {\r\n    try {\r\n      let response: any;\r\n      response = await this.api.getWallet();\r\n      this.all = response.payload;\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async getPath() {\r\n    try {\r\n      let response: any = await this.api.filePick();\r\n      console.log(response);\r\n      if (response.status === \"success\") {\r\n        this.file = response?.payload?.items_picked[0];\r\n        var name = <HTMLInputElement>document.getElementById('fileInput');\r\n        name.placeholder = response?.payload?.items_picked[0];\r\n      }\r\n      else {\r\n        Swal.fire({\r\n          title: response?.payload?.message,\r\n          icon: 'error',\r\n          confirmButtonText: 'Okay',\r\n        }).then((result) => {\r\n          if (result.value) { { } }\r\n        });\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  // async getAllSky() {\r\n  //   try {\r\n  //     let response: any;\r\n  //     response = await this.api.getAllSky();\r\n  //     if (response.status == \"success\") {\r\n  //       this.doCheck(response.payload?.id, (data: any) => { })\r\n  //     }\r\n  //   }\r\n  //   catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // }\r\n\r\n  async getList() {\r\n    try {\r\n      let response: any = await this.api.getList();\r\n      if (response.status === 'success') {\r\n        this.allSky = response.payload;\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  // async doCheck(taskID: any, xdata: any) {\r\n  //   let task: any = await this.api.doCheck(taskID);\r\n  //   console.log(\"Task done: \", task);\r\n  //   if (task) {\r\n  //     this.payload = task.payload;\r\n  //     if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n  //       if (this.payload.status == \"completed\") {\r\n  //         this.allSky = this.payload.data;\r\n  //       }\r\n  //       return;\r\n  //     }\r\n  //     setTimeout(() => {\r\n  //       this.doCheck(taskID, xdata)\r\n  //     }, 500)\r\n  //   }\r\n  //   else {\r\n  //   }\r\n  // }\r\n\r\n  async doCheck1(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.deleteCheck = true;\r\n          Swal.fire({\r\n            title: \"Wallet deleted successfully!\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              {\r\n                let currentUrl = this.router.url;\r\n                this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n                this.router.onSameUrlNavigation = 'reload';\r\n                this.router.navigate([currentUrl]);\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheck1(taskID, xdata)\r\n      }, 500)\r\n    }\r\n    else {\r\n    }\r\n  }\r\n\r\n  changRadio(e: any) {\r\n\r\n  }\r\n\r\n  tabToggler(val: string) {\r\n    this.tabSelector = val;\r\n  }\r\n\r\n  customSelector(val: string) {\r\n    if (val == 'usd') {\r\n      this.cSelectorImg = 'assets/usd.svg';\r\n      this.cSelectorText = 'USD';\r\n    } else if (val == 'gbp') {\r\n      this.cSelectorImg = 'assets/gbp.svg';\r\n      this.cSelectorText = 'GBP';\r\n    } else if (val == 'eur') {\r\n      this.cSelectorImg = 'assets/eur.svg';\r\n      this.cSelectorText = 'EUR';\r\n    }\r\n    this.customSelectorOpen = false;\r\n  }\r\n\r\n  customSelToggler() {\r\n    this.customSelectorOpen = !this.customSelectorOpen;\r\n  }\r\n\r\n  customSelectorThree(val: string, wallet: string) {\r\n    if (wallet == 'local') {\r\n      this.cSelectorImgThree = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextThree = val;\r\n      this.isSky = false;\r\n\r\n    } else if (wallet == 'sky') {\r\n      this.cSelectorImgThree = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextThree = val;\r\n      this.isSky = true;\r\n    }\r\n    this.customSelectorOpenThree = false;\r\n  }\r\n\r\n  async delete() {\r\n    if (this.isSky == true) {\r\n      try {\r\n        if (this.deleteForm.valid) {\r\n          var data = this.cSelectorTextThree;\r\n          let response: any = await this.api.deleteSky(data);\r\n          this.deleteUserModal = !this.deleteUserModal;\r\n          if (response.status == 'success') {\r\n            this.doCheck1(response.payload?.id, (data: any) => { });\r\n          }\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    else {\r\n      try {\r\n        if (this.deleteForm.valid) {\r\n          var data = this.cSelectorTextThree;\r\n          let response: any = await this.api.deleteWallet(data);\r\n          this.deleteUserModal = !this.deleteUserModal;\r\n          if (response.status == \"error\") {\r\n            Swal.fire({\r\n              title: response.payload.message,\r\n              icon: 'error',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) { { } }\r\n            });\r\n          }\r\n          else {\r\n            this.deleteCheck = true;\r\n            Swal.fire({\r\n              title: \"Wallet deleted successfully!\",\r\n              icon: 'success',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                {\r\n                  let currentUrl = this.router.url;\r\n                  this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n                  this.router.onSameUrlNavigation = 'reload';\r\n                  this.router.navigate([currentUrl]);\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  formatLabel(value: number) {\r\n    let response = value + '%';\r\n    return response;\r\n  }\r\n\r\n  updateSetting(e, name) {\r\n    this.settings = true;\r\n    if (name == 'req') {\r\n      this.req = e.value;\r\n    }\r\n    else if (name == 'echo') {\r\n      this.echo = e.value;\r\n    }\r\n    else if (name == 'max') {\r\n      this.max = e.value;\r\n    }\r\n  }\r\n\r\n  async taskSetting() {\r\n    if (this.settings == true) {\r\n      try {\r\n        var data = {\r\n          \"default_timeout_mult\": this.req,\r\n          \"echo_timeout_mult\": this.echo,\r\n          \"max_notes\": this.max,\r\n          \"change_server_sn\": 2\r\n        }\r\n        let response: any = await this.api.settingTask(data);\r\n        console.log(response);\r\n        if (response.status === \"success\") {\r\n          Swal.fire({\r\n            title: \"Changes saved successfully!\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  async uploadConfFile() {\r\n    // var domain_name = String(this.nftSettingsForm.get('dnsname').value);\r\n    try {\r\n      var data = {\r\n        upload_url: String(this.nftSettingsForm.get('url').value),\r\n        upload_secret_key: String(this.nftSettingsForm.get('secretkey').value),\r\n        cf_api_key: String(this.nftSettingsForm.get('apikey').value)\r\n      }\r\n      console.log(data);\r\n      let response: any = await this.api.updateNftConf(data);\r\n      this.showLoader = true;\r\n      this.loadingMessage = \"Saving changes...\"\r\n      if (response.status === \"success\") {\r\n        console.log(\"success!!!\")\r\n        this.showLoader = false;\r\n        Swal.fire({\r\n          title: 'Changes have been uploaded successfully',\r\n          icon: 'success',\r\n          confirmButtonText: 'Okay'\r\n        });\r\n        this.router.navigate(['/dashboard/create-settings']);\r\n        // this.clearForm();\r\n\r\n      } else {\r\n        this.showLoader = false;\r\n        Swal.fire({\r\n          title: 'Failed to save changes',\r\n          icon: 'error',\r\n          confirmButtonText: 'Okay'\r\n        });\r\n        this.router.navigate(['/dashboard/create-settings']);\r\n        // this.clearForm();\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n  }\r\n\r\n  async getConfDetails() {\r\n    console.log('yayyyyy')\r\n    try {\r\n      let response: any = await this.api.returnNftConf();\r\n      if (response.status === \"success\") {\r\n        this.upload_url = response.payload.upload_url;\r\n        this.secret_key = response.payload.upload_secret_key;\r\n        this.api_key = response.payload.cf_api_key;\r\n        //console.log(\"test\" + \" \" + this.secret_key)\r\n        var splitted = this.upload_url.split(\"/\", 3)\r\n        console.log(\"splitted:\" + splitted[2])\r\n        this.dname = splitted[2]\r\n      } else {\r\n        console.log('no previous configurations found');\r\n      }\r\n      this.nftSettingsForm.patchValue({\r\n        secretkey: this.secret_key,\r\n        apikey: this.api_key,\r\n        url: this.upload_url,\r\n        dnsname: this.dname\r\n\r\n      })\r\n    }\r\n\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  customSelTogglerThree() {\r\n    this.customSelectorOpenThree = !this.customSelectorOpenThree;\r\n  }\r\n\r\n  deleteUserModalToggler() {\r\n    if (this.cSelectorTextThree != 'Select a wallet') {\r\n      this.deleteUserModal = !this.deleteUserModal;\r\n    }\r\n  }\r\n  removeProModalToggler() {\r\n    this.removeProModal = !this.removeProModal;\r\n  }\r\n\r\n  customSelectorFour(val: string) {\r\n    if (val == 'userThree') {\r\n      this.cSelectorImgFour = 'assets/cloud-transfer.svg';\r\n      // this.cSelectorTextfour = 'johnHaltiwanger.skywallet.cc';\r\n      this.cSelectorTextFour = 'johnHaltiwanger.skywallet.cc';\r\n    } else if (val == 'userFour') {\r\n      this.cSelectorImgFour = 'assets/folder-w-border.svg';\r\n      // this.cSelectorTextfour = 'johny4';\r\n      this.cSelectorTextFour = 'johny4';\r\n    }\r\n    this.customSelectorOpenFour = false;\r\n  }\r\n  customSelTogglerFour() {\r\n    this.customSelectorOpenFour = !this.customSelectorOpenFour;\r\n  }\r\n\r\n  toggleExtPswType() {\r\n    this.existingPswShow = !this.existingPswShow;\r\n  }\r\n  toggleNewPswType() {\r\n    this.newPswShow = !this.newPswShow;\r\n  }\r\n  toggleBkpPswType() {\r\n    this.backupExtPswShow = !this.backupExtPswShow;\r\n  }\r\n\r\n  customSelectorFive(val: string, wallet: string) {\r\n    if (wallet == 'sky') {\r\n      this.cSelectorImgFive = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextFive = val;\r\n    } else if (wallet == 'local') {\r\n      this.cSelectorImgFive = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextFive = val;\r\n    }\r\n    this.customSelectorOpenFive = false;\r\n  }\r\n  customSelTogglerFive() {\r\n    this.customSelectorOpenFive = !this.customSelectorOpenFive;\r\n  }\r\n\r\n  customSelectorSix(val: string, wallet: string) {\r\n    if (wallet == 'sky') {\r\n      this.cSelectorImgSix = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextSix = val;\r\n    } else if (wallet == 'local') {\r\n      this.cSelectorImgSix = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextSix = val;\r\n    }\r\n    this.customSelectorOpenSix = false;\r\n  }\r\n  recoveryEmailToggler() {\r\n    this.customSelectorOpenSix = !this.customSelectorOpenSix;\r\n  }\r\n\r\n  removeProModalTogglerTwo() {\r\n    this.removeProModalTwo = !this.removeProModalTwo;\r\n  }\r\n\r\n  customSelectorSeven(val: string, wallet: string) {\r\n    if (wallet == 'sky') {\r\n      this.cSelectorImgSeven = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextSeven = val;\r\n    } else if (wallet == 'local') {\r\n      this.cSelectorImgSeven = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextSeven = val;\r\n    } else if (wallet == 'anotherFolder') {\r\n      this.cSelectorImgSeven = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextSeven = 'Choose another folder';\r\n    }\r\n    this.customSelectorOpenSeven = false;\r\n  }\r\n  listSecrialToggler() {\r\n    this.customSelectorOpenSeven = !this.customSelectorOpenSeven;\r\n  }\r\n\r\n  customSelectorEight(val: string, wallet: string) {\r\n    this.health = true;\r\n    if (wallet == 'local') {\r\n      this.cSelectorImgEight = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextEight = val;\r\n      this.healthChoose = \"local\";\r\n    } else if (wallet == 'sky') {\r\n      this.cSelectorImgEight = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextEight = val;\r\n      this.healthChoose = \"sky\";\r\n    }\r\n    this.customSelectorOpenEight = false;\r\n  }\r\n\r\n  healthCheckToggler() {\r\n    this.customSelectorOpenEight = !this.customSelectorOpenEight;\r\n  }\r\n\r\n  async checkhealth() {\r\n    if (this.healthChoose === 'local') {\r\n      try {\r\n        var data = {\r\n          name: this.cSelectorTextEight\r\n        }\r\n        let response: any = await this.api.health(data);\r\n        console.log(response);\r\n        if (response.status == \"success\") {\r\n          this.healthProgress = true;\r\n          this.doCheckHealth(response.payload?.id, (data: any) => { })\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      try {\r\n        var data = {\r\n          name: this.cSelectorTextEight\r\n        }\r\n        let response: any = await this.api.skyhealth(data);\r\n        console.log(response);\r\n        if (response.status == \"success\") {\r\n          this.skyHealthProgress = true;\r\n          this.doCheckSkyHealth(response.payload?.id, (data: any) => { })\r\n        }\r\n      }\r\n      catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  async doCheckHealth(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.healthProg = this.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.goTODash = true;\r\n        } else {\r\n          this.goTODash = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheckHealth(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async doCheckSkyHealth(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.healthProg = this.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.goTODash = true;\r\n        } else {\r\n          this.goTODash = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheckSkyHealth(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  getColor(bal: any) {\r\n    if (bal === 1 || bal > 1) {\r\n      return 'green';\r\n    } else if (bal === 0) {\r\n      return 'red';\r\n    }\r\n  }\r\n\r\n  backFix() {\r\n    this.cSelectorTextTen = 'Select a wallet';\r\n    this.cSelectorImgTen = '';\r\n    this.fixProgress = false;\r\n    this.goTODash = false;\r\n    this.fixProg.progress = 0;\r\n  }\r\n\r\n  backHealth() {\r\n    this.skyHealthProgress = false;\r\n    this.healthProgress = false;\r\n    this.goTODash = false;\r\n    this.healthProg.progress = 0;\r\n    this.cSelectorTextEight = 'Select a wallet';\r\n    this.cSelectorImgEight = '';\r\n  }\r\n\r\n  backFixsky() {\r\n    this.skyHealthProgress = false;\r\n    this.cSelectorTextEight = 'Select a wallet';\r\n    this.cSelectorImgEight = '';\r\n    this.healthProgress = false;\r\n    this.goTODash = false;\r\n    this.healthProg.progress = 0;\r\n    this.fixSkyvault = false;\r\n  }\r\n\r\n  async fixSky() {\r\n    try {\r\n      var data = {\r\n        name: this.cSelectorTextEight,\r\n        sync_items: this.healthProg?.data?.sns\r\n      }\r\n      let response: any = await this.api.fixSky(data);\r\n      if (response.status == \"success\") {\r\n        this.doFixsky(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doFixsky(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.fixSkyvault = true;\r\n        } else {\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doFixsky(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  customSelectorNine(val: string, wallet: string) {\r\n    if (wallet == 'local') {\r\n      this.cSelectorImgNine = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextNine = val;\r\n    } else if (wallet == 'sky') {\r\n      this.cSelectorImgNine = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextNine = val;\r\n    }\r\n    this.customSelectorOpenNine = false;\r\n  }\r\n\r\n  backupToggler() {\r\n    this.customSelectorOpenNine = !this.customSelectorOpenNine;\r\n  }\r\n\r\n\r\n  customSelectorTen(val: string, wallet: string) {\r\n    if (wallet == 'local') {\r\n      this.cSelectorImgTen = 'assets/folder-w-border.svg';\r\n      this.cSelectorTextTen = val;\r\n    } else if (wallet == 'sky') {\r\n      this.cSelectorImgTen = 'assets/cloud-transfer.svg';\r\n      this.cSelectorTextTen = val;\r\n    }\r\n    this.frackContinue = true;\r\n    this.customSelectorOpenTen = false;\r\n  }\r\n\r\n  frackedToggler() {\r\n    this.customSelectorOpenTen = !this.customSelectorOpenTen;\r\n  }\r\n\r\n  async fixFracked() {\r\n    try {\r\n      var data = {\r\n        name: this.cSelectorTextTen\r\n      }\r\n      let response: any = await this.api.fix(data);\r\n      if (response.status === \"success\") {\r\n        this.fixProgress = true;\r\n        this.doCheckFix(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doCheckFix(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.fixProg = this.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.goTODash = true;\r\n        } else {\r\n          this.goTODash = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheckFix(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async customSelectorEleven(val: string) {\r\n    this.cSelectorImgEleven = 'assets/cloud-transfer.svg';\r\n    this.cSelectorTextEleven = val;\r\n    this.customSelectorOpenEleven = false;\r\n    this.getSkywallet(val);\r\n  }\r\n  passkeyToggler() {\r\n    this.customSelectorOpenEleven = !this.customSelectorOpenEleven;\r\n  }\r\n\r\n  async getSkywallet(name: string) {\r\n    try {\r\n      let response: any = await this.api.getSky(name);\r\n      if (response.status == \"success\") {\r\n        this.showLoader = true;\r\n        this.doCheck(response.payload?.id, (data: any) => {\r\n        })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doCheck(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"task:\" + task)\r\n    console.log(\"task Id :\" + taskID)\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.showLoader = false;\r\n          this.passkeyImage = await fetch(`data:image/png;base64,${this.payload?.data?.png}`);\r\n        } else {\r\n          this.showLoader = false;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheck(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async donwload() {\r\n    const blobs = await this.passkeyImage.blob();\r\n    const newBlob = new Blob([blobs], { type: 'image/png' });\r\n    var downloadURL = window.URL.createObjectURL(blobs);\r\n    var link = document.createElement('a');\r\n    link.href = downloadURL;\r\n    link.download = this.cSelectorTextEleven + \".png\";\r\n    link.click();\r\n  }\r\n\r\n  showLoading(state): void {\r\n    this.loadingMessage = '';\r\n    if (state) {\r\n\r\n      this.showLoader = true;\r\n\r\n    } else {\r\n\r\n      this.showLoader = false;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  clearForm() {\r\n    this.nftSettingsForm.reset();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"settingsWrapper\">\r\n  <div class=\"headerbackWrap\">\r\n    <span class=\"titleOne\">Settings</span>\r\n  </div>\r\n  <div class=\"gap10\"></div>\r\n  <div class=\"settingBody\">\r\n    <div class=\"tabHolder\">\r\n      <div class=\"tabHeader\">\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'general' ? 'active' : ''\"\r\n          (click)=\"tabToggler('general')\">General</a> -->\r\n        <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'performance' ? 'active' : ''\"\r\n          (click)=\"tabToggler('performance')\">Performance</a>\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'password' ? 'active' : ''\"\r\n          (click)=\"tabToggler('password')\">Password</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'passkey' ? 'active' : ''\"\r\n          (click)=\"tabToggler('passkey')\">Passkey</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'history' ? 'active' : ''\"\r\n          (click)=\"tabToggler('history')\">History</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'recoveryEmail' ? 'active' : ''\"\r\n          (click)=\"tabToggler('recoveryEmail')\">Recovery Email</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'healthCheck' ? 'active' : ''\"\r\n          (click)=\"tabToggler('healthCheck')\">Health Check</a>\r\n        <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'backup' ? 'active' : ''\"\r\n          (click)=\"tabToggler('backup')\">Backup</a>\r\n        <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'fixFracked' ? 'active' : ''\"\r\n          (click)=\"tabToggler('fixFracked')\">Fix Fracked</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'raida' ? 'active' : ''\"\r\n          (click)=\"tabToggler('raida')\">RAIDA Status</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'listSerials' ? 'active' : ''\"\r\n          (click)=\"tabToggler('listSerials')\">List Serials</a> -->\r\n        <!-- <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'trusted' ? 'active' : ''\"\r\n          (click)=\"tabToggler('trusted')\">Trusted RAIDA</a>\r\n      </div> -->\r\n      <a href=\"javascript:;\" class=\"tabItem\" [ngClass]=\"tabSelector == 'nft' ? 'active' : ''\" (click)=\"tabToggler('nft')\">NFT Publishing</a>\r\n        <div class=\"tabBody\">\r\n\r\n          <div class=\"tabGeneralCont\" *ngIf=\"tabSelector == 'general'\">\r\n            <!-- <h2 class=\"subHedOne\">Change preferred currency</h2>\r\n\r\n          <div class=\"lineSection\">\r\n            <div class=\"customeDropdown\">\r\n              <div class=\"triger\" (click)=\"customSelToggler()\">\r\n                <img [src]=\"cSelectorImg\" alt=\"\">\r\n                <span>{{cSelectorText}}</span>\r\n              </div>\r\n              <div class=\"menuShow\" *ngIf=\"customSelectorOpen\">\r\n                <div class=\"menus\" (click)=\"customSelector('usd')\">\r\n                  <img src=\"assets/usd.svg\" alt=\"icon\">\r\n                  <span>USD</span>\r\n                </div>\r\n                <div class=\"menus\" (click)=\"customSelector('gbp')\">\r\n                  <img src=\"assets/gbp.svg\" alt=\"icon\">\r\n                  <span>GBP</span>\r\n                </div>\r\n                <div class=\"menus\" (click)=\"customSelector('eur')\">\r\n                  <img src=\"assets/eur.svg\" alt=\"icon\">\r\n                  <span>EUR</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p>$ 1 = CC 100</p>\r\n            <p>€ 1 = CC 100</p>\r\n          </div> -->\r\n            <!-- <div class=\"gap40\"></div> -->\r\n            <h2 class=\"subHedOne\">Delete Wallet</h2>\r\n            <p class=\"textOne\">Select your wallet below to delete</p>\r\n            <div class=\"gap10\"></div>\r\n            <div class=\"lineSection\">\r\n              <div class=\"customeDropdownTwo\">\r\n                <div class=\"triger\" (click)=\"customSelTogglerThree()\">\r\n                  <img [src]=\"cSelectorImgThree\" alt=\"image\" *ngIf=\"cSelectorImgThree != ''\">\r\n                  <span>{{cSelectorTextThree}}</span>\r\n                </div>\r\n                <div class=\"menuShowTwo scroll\" *ngIf=\"customSelectorOpenThree\">\r\n                  <div class=\"menus\" (click)=\"customSelectorThree(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                    <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                    <span>{{data.name}}</span>\r\n                  </div>\r\n                  <div class=\"menus\" (click)=\"customSelectorThree(data.name, 'sky')\" *ngFor=\"let data of allSky\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>{{data.name}}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Success message -->\r\n              <div class=\"successMessage\" *ngIf=\"deleteCheck\">\r\n                <img src=\"assets/green-check.svg\" alt=\"icon\">\r\n                <p>{{cSelectorTextThree}} has been successfully deleted</p>\r\n              </div>\r\n              <!-- ================ -->\r\n            </div>\r\n            <div class=\"gap40\"></div>\r\n            <button class=\"btnCustomRed\" [ngClass]=\"{'btnDisable':cSelectorTextThree == 'Select a wallet' }\"\r\n              (click)=\"deleteUserModalToggler()\">Delete wallet</button>\r\n          </div>\r\n\r\n          <div class=\"tabPerformCont\" *ngIf=\"tabSelector == 'performance'\">\r\n            <h2 class=\"subHedOne\">Performance Settings</h2>\r\n            <p class=\"textOne\">These settings are used to manually control your server timeouts, modes of transaction,\r\n              etc.\r\n            </p>\r\n            <p class=\"note\"><img src=\"assets/info-white.svg\" alt=\"icon\" data-toggle=\"tooltip\" data-placement=\"top\"\r\n                ngbTooltip=\"Minimum means that it is faster but more likely to time out. Maximum means it is slower and less likely to time out.\">\r\n              These are optimised based on your internet speed.\r\n              & location</p>\r\n            <div class=\"gap20\"></div>\r\n            <!-- <div class=\"formField\">\r\n            <label for=\"\">Mode <img data-toggle=\"tooltip\" data-placement=\"top\"\r\n                ngbTooltip=\"Mode determines how the 25 servers of RAIDA function in order to the transactions\" class=\"\"\r\n                src=\"assets/question-white.svg\" alt=\"icon\"></label>\r\n          </div>\r\n          <div class=\"radioInpHolder radioInpHolderTri\">\r\n            <input type=\"radio\" name=\"hiddenFile\"><span>Auto</span>\r\n          </div>\r\n          <div class=\"radioInpHolder radioInpHolderTri\">\r\n            <input type=\"radio\" name=\"hiddenFile\"><span>Serial</span>\r\n          </div>\r\n          <div class=\"radioInpHolder radioInpHolderTri\">\r\n            <input type=\"radio\" name=\"hiddenFile\"><span>Parallel</span>\r\n          </div>\r\n          <div class=\"gap20\"></div> -->\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"formField\">\r\n                  <label for=\"\">Max Notes <img data-toggle=\"tooltip\" data-placement=\"top\"\r\n                      ngbTooltip=\"Coins the program will send at one time.\" src=\"assets/question-white.svg\"\r\n                      alt=\"icon\"></label>\r\n                  <span class=\"text-white\">1</span>\r\n                  <mat-slider style=\"width:65%\" class=\"min\" thumbLabel [displayWith]=\"formatLabel1\"\r\n                    (change)=\"updateSetting($event, 'max')\" [value]=\"max\" tickInterval=\"100\" min=\"1\" max=\"1800\"\r\n                    aria-label=\"units\"></mat-slider>\r\n                  <span class=\"text-white\">1800</span>\r\n\r\n                  <span class=\"badge badge-primary\"\r\n                    style=\"border-radius:100%; width:auto; height:30px; padding-top:10px; margin-left:60px;\">{{max}}</span>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"formField\">\r\n                  <label for=\"\">Request Timeout <img data-toggle=\"tooltip\" data-placement=\"top\"\r\n                      ngbTooltip=\"This is the amount of time the program will wait for a RAIDA to respond before it gives up. Normally a RAIDA should respond within .5 seconds. Increasing this to 100% will have it wait for 2 seconds. You can reduce this time to make the program run faster at the expense of accuracy.\"\r\n                      src=\"assets/question-white.svg\" alt=\"icon\"></label>\r\n                  <span class=\"text-white\">1%</span>\r\n                  <mat-slider style=\"width:65%\" class=\"min\" thumbLabel [displayWith]=\"formatLabel\"\r\n                    (change)=\"updateSetting($event, 'req')\" [value]=\"req\" tickInterval=\"100\" min=\"1\" max=\"100\"\r\n                    aria-label=\"units\"></mat-slider>\r\n                  <span class=\"text-white\">100%</span>\r\n\r\n                  <span class=\"badge badge-primary\"\r\n                    style=\"border-radius:100%; width:auto; height:30px; padding-top:10px; margin-left:50px;\">{{req}}</span>\r\n\r\n                </div>\r\n\r\n                <div class=\"formField\">\r\n                  <label for=\"\">Echo Timeout <img data-toggle=\"tooltip\" data-placement=\"top\"\r\n                      ngbTooltip=\"This is the amount of time the program will wait for a RAIDA to respond before it gives up. Normally a RAIDA should respond within .5 seconds. Increasing this to 100% will have it wait for 2 seconds. You can reduce this time to make the program run faster at the expense of accuracy.\"\r\n                      src=\"assets/question-white.svg\" alt=\"icon\"></label>\r\n                  <span class=\"text-white\">1%</span>\r\n                  <mat-slider style=\"width:65%\" class=\"min\" thumbLabel [displayWith]=\"formatLabel\"\r\n                    (change)=\"updateSetting($event, 'echo')\" [value]=\"echo\" tickInterval=\"100\" min=\"1\" max=\"100\"\r\n                    aria-label=\"units\"></mat-slider>\r\n                  <span class=\"text-white\">100%</span>\r\n\r\n                  <span class=\"badge badge-primary\"\r\n                    style=\"border-radius:100%; width:auto; height:30px; padding-top:10px; margin-left:50px;\">{{echo}}</span>\r\n\r\n                </div>\r\n\r\n                <!-- <div class=\"formField\">\r\n                <label for=\"\">DDNS Server <img data-toggle=\"tooltip\" data-placement=\"top\"\r\n                    ngbTooltip=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"\r\n                    src=\"assets/question-white.svg\" alt=\"icon\"></label>\r\n                <input type=\"text\" value=\"ddns.cloudcoin.global\">\r\n              </div>\r\n              <div class=\"radioInpHolder radioInpHolderSingle\">\r\n                <div class=\"custom-control custom-switch\">\r\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"setupRecovery\" type=\"checkbox\"\r\n                  data-toggle=\"toggle\"/>\r\n                  <label for=\"setupRecovery\" class=\"custom-control-label\">Use custom domain <img data-toggle=\"tooltip\" data-placement=\"top\" ngbTooltip=\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\" class=\"infoicon\" src=\"assets/info.svg\" alt=\"\" data-toggle=\"popover\" data-content=\"And here's some amazing content. It's very engaging. Right?\">\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div class=\"formField bgFill\">\r\n                <input type=\"text\" placeholder=\"Ex: john.io\">\r\n              </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"tabSelector == 'nft' \">\r\n            <form [formGroup]=\"nftSettingsForm\" (ngSubmit)=\"onSubmit(nftSettingsForm)\">\r\n              <ng-container>\r\n                <p class=\"titleTwo\" style=\"opacity: 0.8;\"> You can publish your NFTs on your web server and record their authenticity in your DNS server.\r\n                  This allows people to verify the authenticity of the NFTs you have created and will make them more valuable.\r\n                </p>\r\n                <div class=\"gap10\"></div>\r\n                <p class=\"titleTwo\" style=\"opacity: 0.8;\"> You can find instructions on how to do this here:\r\n                </p>\r\n                <p>\r\n                  <a href=\"https://github.com/CloudCoinConsortium/CoinManager/tree/main/nft\"\r\n                    target=\"_blank\">https://github.com/CloudCoinConsortium/CoinManager/tree/main/nft</a>\r\n                </p>\r\n\r\n                <div class=\"formfield\">\r\n                  <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                  <label class=\"dark_mode_text\" for=\"qualname\"> Your Domain Name:\r\n                    <span class =\"ml-2\">\r\n                      <img\r\n                          src=\"assets/icons_info1.png\" title=\"You can create records in your DNS Server that prove that you are the creator of the NFT and customize each NFT.\"  style=\"height: 18px ; width:18px\" />\r\n                      </span>\r\n                  </label>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                  <input class=\"form-control text_box_two\" type=\"text\" formControlName=\"dnsname\"\r\n                    placeholder=\"YourDomain.com\" maxlength=\"61\" (keydown.enter)=\"$event.preventDefault()\">\r\n                  </div>\r\n                  </div>\r\n                  <div *ngIf=\"isValidInput('dnsname')\">\r\n                    <span class=\"errorMsg1\"><img src=\"assets/error_info_icon.svg\" alt=\"error icon\">Please enter domain\r\n                      name in valid format. Max length is 61.</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formfield\">\r\n                  <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                  <label class=\"dark_mode_text\" for=\"url\">Upload NFTs To:</label>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                  <input class=\"form-control text_box_two\" type=\"text\" formControlName=\"url\"\r\n                    (keydown.enter)=\"$event.preventDefault()\">\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formfield\">\r\n                  <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                  <label class=\"dark_mode_text\" for=\"secretkey\">Upload Page Password:</label>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                  <input class=\"form-control text_box_two\" type=\"text\" formControlName=\"secretkey\"\r\n                    (keydown.enter)=\"$event.preventDefault()\">\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"formfield\">\r\n                  <div class=\"row\">\r\n                  <div class=\"col-md-3\">\r\n                  <label class=\"dark_mode_text\" for=\"apikey\">CloudFlare DNS Api Key:</label>\r\n                  </div>\r\n                  <div class=\"col-md-2\">\r\n                  <input class=\"form-control text_box_two\" type=\"text\" formControlName=\"apikey\"\r\n                    (keydown.enter)=\"$event.preventDefault()\">\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </ng-container>\r\n              <div class=\"transBottomFooter\">\r\n                <div class=\"bottomPartSubmit\">\r\n                    <div class=\"bottomFooter\">\r\n                        <div class=\"container\">\r\n                            <button href=\"javascript:;\" class=\"btnCustomBlack\"\r\n                                [ngClass]=\"{btnDisable:this.nftSettingsForm.invalid}\"\r\n                                type=\"submit\">Save Changes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            </form>\r\n\r\n          </div>\r\n          <div class=\"onEventLoadWrap\" *ngIf=\"showLoader\">\r\n            <ng-container>\r\n                <div class=\"text-center  loader_show\">\r\n                    <ng-lottie height=\"150px\" [options]=\"options\" (animationCreated)=\"animationCreated($event)\"></ng-lottie>\r\n                    <span style=\"color:#ffffff\">{{loadingMessage}}</span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n          <div class=\"tabPasswordCont\" *ngIf=\"tabSelector == 'password'\">\r\n            <h2 class=\"subHedOne\">Password</h2>\r\n            <p class=\"textOne\">Having a password adds a layer of security to your wallets. Make sure you remember it.\r\n            </p>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"lineSection\">\r\n\r\n              <div class=\"customeDropdownTwo\">\r\n                <div class=\"formField\">\r\n                  <label for=\"select wallet\">Choose Wallet</label>\r\n                  <div class=\"triger\" (click)=\"customSelTogglerFour()\">\r\n                    <img [src]=\"cSelectorImgFour\" alt=\"image\" *ngIf=\"cSelectorImgFour != ''\">\r\n                    <span>{{cSelectorTextFour}}</span>\r\n                  </div>\r\n                  <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenFour\">\r\n                    <div class=\"menus\" (click)=\"customSelectorFour('userThree')\">\r\n                      <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                      <span>johnHaltiwanger.skywallet.cc</span>\r\n                    </div>\r\n                    <div class=\"menus\" (click)=\"customSelectorFour('userFour')\">\r\n                      <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                      <span>johny4</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"gap10\"></div>\r\n              <div class=\"formField\">\r\n                <div class=\"checkboxInpHolder\">\r\n                  <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> You don’t need password\r\n                    protection for the selected wallet as you have already downloaded the authentication file.</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"gap20\"></div>\r\n\r\n              <div class=\"passwordCloud\">\r\n                <div class=\"inputSelectTwo\">\r\n                  <label for=\"\">Password Protection</label>\r\n                  <div class=\"passEdit\">\r\n                    <span>********</span>\r\n                    <button><img src=\"assets/pen.svg\" alt=\"icon\"> Edit</button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"gap20\"></div>\r\n                <!-- cloud password -->\r\n                <div class=\"passEditOption\">\r\n                  <div class=\"formFieldThree\">\r\n                    <label for=\"\">Existing Password</label>\r\n                    <div class=\"inputLine\">\r\n                      <input [type]=\"existingPswShow ? 'password' : 'text'\">\r\n                      <button (click)=\"toggleExtPswType()\">\r\n                        <img src=\"{{ existingPswShow ? 'assets/eyeopen.svg' : 'assets/eyeclose.svg'}}\" type=\"button\" />\r\n                      </button>\r\n                    </div>\r\n                    <span class=\"errorPass\"><img src=\"assets/cross-red.svg\" alt=\"\">Wrong password</span>\r\n                  </div>\r\n                  <div class=\"formFieldThree\">\r\n                    <label for=\"\">New Password</label>\r\n                    <div class=\"inputLine\">\r\n                      <input [type]=\"newPswShow ? 'password' : 'text'\">\r\n                      <button (click)=\"toggleNewPswType()\">\r\n                        <img src=\"{{ newPswShow ? 'assets/eyeopen.svg' : 'assets/eyeclose.svg'}}\" type=\"button\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- local password -->\r\n                <div class=\"localPassword\">\r\n                  <div class=\"custom-control custom-switch\">\r\n                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"setupRecovery\" type=\"checkbox\"\r\n                      data-toggle=\"toggle\" (click)=\"removeProModalToggler()\" />\r\n                    <label for=\"setupRecovery\" class=\"custom-control-label\">Password Protection </label>\r\n                  </div>\r\n                  <!--<div class=\"gap10\"></div>\r\n                <div class=\"localPassDiv\">\r\n                  <div class=\"formField\">\r\n                    <input type=\"text\" placeholder=\"Enter a password\" disabled  >\r\n                  </div>\r\n                  <div class=\"passParamiter\">\r\n                    <h5>Strength:\r\n                      <span style=\"color: #f00;\">Low</span>\r\n                      <span style=\"color: #FF6100;\">Medium</span>\r\n                      <span style=\"color: #2A4;\">High</span>\r\n                    </h5>\r\n                    <p>\r\n                      <img src=\"assets/check-green.svg\" alt=\"icon\">\r\n                      <img src=\"assets/cross-red.svg\" alt=\"icon\">\r\n                      At least 8 characters</p>\r\n                      <p>\r\n                        <img src=\"assets/check-green.svg\" alt=\"icon\">\r\n                        <img src=\"assets/cross-red.svg\" alt=\"icon\">\r\n                        At least 1 capital letter</p>\r\n                        <p>\r\n                          <img src=\"assets/check-green.svg\" alt=\"icon\">\r\n                          <img src=\"assets/cross-red.svg\" alt=\"icon\">\r\n                          At least 1 special character</p>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n              </div> -->\r\n\r\n                </div>\r\n\r\n\r\n                <!-- <div class=\"formField\">\r\n              <div class=\"checkboxInpHolder\">\r\n                <img src=\"assets/cross-red.svg\" alt=\"icon\"> <span style=\"color: #f00;\"> Existing password and New password can’t be the same.</span>\r\n              </div>\r\n            </div> -->\r\n                <!-- <div class=\"formField\">\r\n              <div class=\"checkboxInpHolder\">\r\n                <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Your password has been changed</span>\r\n              </div>\r\n            </div> -->\r\n                <!-- <div class=\"formField\">\r\n              <div class=\"checkboxInpHolder\">\r\n                <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Password saved</span>\r\n              </div>\r\n            </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- <div class=\"tabPasswordCont\" *ngIf=\"tabSelector == 'passkey'\">\r\n          <h2 class=\"subHedOne\">Passkey</h2>\r\n          <p class=\"textOne\">Use the passkey image to make transactions on any CC supported platforms.</p>\r\n          <div class=\"gap20\"></div>\r\n          <div class=\"lineSection\">\r\n            <div class=\"inputSelectTwo\">\r\n              <label for=\"\">Choose skyvault</label>\r\n\r\n              <div class=\"customeDropdownTwo\">\r\n                <div class=\"triger\" (click)=\"passkeyToggler()\">\r\n                  <img [src]=\"cSelectorImgEleven\" alt=\"image\" *ngIf=\"cSelectorImgEleven != ''\">\r\n                  <span>{{cSelectorTextEleven}}</span>\r\n                </div>\r\n                <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenEleven\">\r\n                  <div class=\"menus\" (click)=\"customSelectorEleven(data.name)\" *ngFor=\"let data of allSky\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>{{data.name}}</span>\r\n                  </div>\r\n                  <div class=\"menus\" *ngIf=\"allSky.length == 0\">\r\n                    <span class=\"text-center\">No SkyVault to show Passkeys for</span>\r\n                  </div> -->\r\n          <!-- <div class=\"menus\" (click)=\"customSelectorEleven('user20')\">\r\n                    <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                    <span>johny4</span>\r\n                  </div> -->\r\n          <!-- <div class=\"menus\" (click)=\"customSelectorEleven('user21')\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>johnHaltiwanger.skywallet.cc</span>\r\n                  </div> -->\r\n          <!-- </div>\r\n              </div>\r\n            </div>\r\n          </div> -->\r\n\r\n          <!-- <div class=\"passkeyOne\">\r\n            <div class=\"gap30\"></div>\r\n            <div class=\"cardImg\" *ngIf=\"passkeyImage !== ''\">\r\n              <img [src]=\"passkeyImage?.url\" alt=\"card\">\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n\r\n          <div class=\"tabHistoryCont\" *ngIf=\"tabSelector == 'history'\">\r\n            <h2 class=\"subHedOne\">Clear History</h2>\r\n            <p class=\"subTitleTwo\">Clearing history will ensure your privacy if somebody gains access to your computer.\r\n            </p>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"lineSection\">\r\n              <div class=\"inputSelectTwo\">\r\n\r\n                <div class=\"customeDropdownTwo\">\r\n                  <div class=\"triger\" (click)=\"customSelTogglerFive()\">\r\n                    <img [src]=\"cSelectorImgFive\" alt=\"image\" *ngIf=\"cSelectorImgFive != ''\">\r\n                    <span>{{cSelectorTextFive}}</span>\r\n                  </div>\r\n                  <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenFive\">\r\n                    <div class=\"menus\" (click)=\"customSelectorFive(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                      <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                      <span>{{data.name}}</span>\r\n                    </div>\r\n                    <!-- <div class=\"menus\" (click)=\"customSelectorFive('userFive')\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>johnHaltiwanger.skywallet.cc</span>\r\n                  </div>\r\n                  <div class=\"menus\" (click)=\"customSelectorFive('userSix')\">\r\n                    <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                    <span>johny4</span>\r\n                  </div> -->\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"gap30\"></div>\r\n            <div class=\"formField\">\r\n              <div class=\"checkboxInpHolder\">\r\n                <img src=\"assets/green-check.svg\" alt=\"icon\"> <span> No CC will be deleted.</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"formField\">\r\n              <div class=\"checkboxInpHolder\">\r\n                <img src=\"assets/green-check.svg\" alt=\"icon\"> <span> Only log files and transaction history will be\r\n                  deleted.</span>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"formField\">\r\n            <label class=\"checkboxInpHolder checkBoxWrap\">\r\n              <input type=\"checkbox\"><span>Backup log files and transaction history.</span>\r\n            </label>\r\n          </div> -->\r\n            <div class=\"formField\">\r\n              <label class=\"checkboxInpHolder checkBoxWrap\">\r\n                <input type=\"checkbox\"><span>I understand that this process is permanent and irreversable.</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tabPerformCont\" *ngIf=\"tabSelector == 'recoveryEmail'\">\r\n            <h2 class=\"subHedOne\">Recovery Email</h2>\r\n            <p class=\"subTitleTwo\">Having a recovery email helps you to recover your lost coins.</p>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"lineSection\">\r\n              <div class=\"inputSelectTwo\">\r\n                <label for=\"\">Choose wallet</label>\r\n                <div class=\"customeDropdownTwo\">\r\n                  <div class=\"triger\" (click)=\"recoveryEmailToggler()\">\r\n                    <img [src]=\"cSelectorImgSix\" alt=\"image\" *ngIf=\"cSelectorImgSix != ''\">\r\n                    <span>{{cSelectorTextSix}}</span>\r\n                  </div>\r\n                  <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenSix\">\r\n                    <div class=\"menus\" (click)=\"customSelectorSix(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                      <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                      <span>{{data.name}}</span>\r\n                    </div>\r\n                    <!-- <div class=\"menus\" (click)=\"customSelectorSix('userSeven')\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>johnHaltiwanger.skywallet.cc</span>\r\n                  </div>\r\n                  <div class=\"menus\" (click)=\"customSelectorSix('userEight')\">\r\n                    <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                    <span>johny4</span>\r\n                  </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"localEmailDiv\">\r\n              <div class=\"formField\">\r\n                <input type=\"text\" placeholder=\"Enter an email address.\" disabled>\r\n              </div>\r\n            </div>\r\n            <!-- for checkboxes and others open the code -->\r\n            <div class=\"recovaryEdit\">\r\n              <div class=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"setupRecovery\" type=\"checkbox\"\r\n                  data-toggle=\"toggle\" (click)=\"removeProModalTogglerTwo()\" />\r\n                <label for=\"setupRecovery\" class=\"custom-control-label\">Recovery Email <img data-toggle=\"tooltip\"\r\n                    data-placement=\"top\" ngbTooltip=\"This will allow you to recover your password in case you forgot it\"\r\n                    class=\"infoiconTwo\" src=\"assets/question-border.svg\" alt=\"\" data-toggle=\"popover\"\r\n                    data-content=\"And here's some amazing content. It's very engaging. Right?\">\r\n                </label>\r\n              </div>\r\n              <div class=\"passEdit\">\r\n                <span>john@gmail.com</span>\r\n                <button><img src=\"assets/pen.svg\" alt=\"icon\"> Edit</button>\r\n              </div>\r\n              <div class=\"formField\">\r\n                <div class=\"checkboxInpHolder\">\r\n                  <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Recovery email saved</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"formField\">\r\n                <div class=\"checkboxInpHolder\">\r\n                  <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Recovery email\r\n                    changed</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"formField\">\r\n                <div class=\"checkboxInpHolder\">\r\n                  <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Recovery email turned off\r\n                    for\r\n                    the wallet johnHaltiwanger.skyvault.cc</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ================= -->\r\n\r\n          </div>\r\n\r\n          <div class=\"tabSerialsCont\" *ngIf=\"tabSelector == 'listSerials'\">\r\n            <h2 class=\"subHedOne\">List Serials</h2>\r\n            <p class=\"subTitleTwo\">Download the coin serials on your computer. With List Serials\r\n              you can reclaim your lost CC.</p>\r\n            <div class=\"gap20\"></div>\r\n\r\n            <div class=\"inputSelectTwo\">\r\n              <div class=\"customeDropdownTwo\">\r\n                <div class=\"triger\" (click)=\"listSecrialToggler()\">\r\n                  <img [src]=\"cSelectorImgSeven\" alt=\"image\" *ngIf=\"cSelectorImgSeven != ''\">\r\n                  <span>{{cSelectorTextSeven}}</span>\r\n                </div>\r\n                <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenSeven\">\r\n                  <div class=\"menus\" (click)=\"customSelectorSeven(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                    <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                    <span>{{data.name}}</span>\r\n                  </div>\r\n                  <!-- <div class=\"menus\" (click)=\"customSelectorSeven('userNine')\">\r\n                  <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                  <span>johnHaltiwanger.skywallet.cc</span>\r\n                </div>\r\n                <div class=\"menus\" (click)=\"customSelectorSeven('userTen')\">\r\n                  <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                  <span>johny4</span>\r\n                </div> -->\r\n                  <!-- <div class=\"menus\" (click)=\"customSelectorSeven('another','anotherFolder')\">\r\n                  <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                  <span>Choose another folder</span>\r\n                </div> -->\r\n                </div>\r\n              </div>\r\n              <span style=\"color: #2a4; margin-left: 20px;\"><img src=\"assets/green-check.svg\" alt=\"icon\"> List Serials\r\n                CSV\r\n                file has been downloaded for the wallet: johny4</span>\r\n            </div>\r\n            <div class=\"listTableWrap\">\r\n              <div class=\"listTableDiv\">\r\n                <table class=\"table table-bordered\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Coin Serial</th>\r\n                      <th scope=\"col\">Denomination</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>1295268</td>\r\n                      <td>CC 1</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>1295269</td>\r\n                      <td>CC 5</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>1295270</td>\r\n                      <td>CC 100</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>1295271</td>\r\n                      <td>CC 250</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tabHealthCont\" *ngIf=\"tabSelector == 'healthCheck'\">\r\n            <h2 class=\"subHedOne\">Health Check</h2>\r\n            <p class=\"subTitleTwo\">Health Check will ensure that all your coins are 100% authentic. It will move coins\r\n              to\r\n              the Fracked or Counterfeit folder if they are not 100% authentic.</p>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"lineSection\" *ngIf=\"!fixSkyvault\">\r\n              <div class=\"inputSelectTwo\" *ngIf=\"(skyHealthProgress === false) && (healthProgress === false)\">\r\n                <div class=\"customeDropdownTwo\">\r\n                  <div class=\"triger\" (click)=\"healthCheckToggler()\">\r\n                    <img [src]=\"cSelectorImgEight\" alt=\"image\" *ngIf=\"cSelectorImgEight != ''\">\r\n                    <span>{{cSelectorTextEight}}</span>\r\n                  </div>\r\n                  <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenEight\">\r\n                    <div class=\"menus\" (click)=\"customSelectorEight(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                      <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                      <span>{{data.name}}</span>\r\n                    </div>\r\n                    <div class=\"menus\" (click)=\"customSelectorEight(sky.name, 'sky')\" *ngFor=\"let sky of allSky\">\r\n                      <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                      <span>{{sky.name}}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"headthSubHed\" *ngIf=\"healthProgress || skyHealthProgress\">\r\n                <h4>Performing Health check for the wallet: <span>{{cSelectorTextEight}}</span></h4>\r\n              </div>\r\n\r\n              <div class=\"progressWrap\" *ngIf=\"(healthProgress && !goTODash) || (skyHealthProgress && !goTODash)\">\r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{'width': healthProg?.progress + '%'}\"\r\n                    aria-valuenow=\"55\" aria-valuemin=\"0\" aria-valuemax=\"100\">Checked\r\n                    <span\r\n                      *ngIf=\"healthProgress\">{{this.healthProg?.data?.TotalCheckedCoins}}/{{this.healthProg?.data?.TotalCoins}}</span>\r\n                    Coins\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"formField\"\r\n                *ngIf=\"(healthProgress && !goTODash) || (skyHealthProgress && !goTODash) && healthProg?.progress === '100'\">\r\n                <div class=\"checkboxInpHolder\">\r\n                  <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Health Check\r\n                    completed</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"healthList\" *ngIf=\"goTODash && healthProg?.status === 'completed' && healthProgress\">\r\n                <div class=\"healthListDiv\">\r\n                  <p>Total Authentic Coins</p>\r\n                  <h6>{{this.healthProg?.data?.TotalAuthentic}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                  <p>Total Fracked Coins <span>(moved to the Fracked folder)</span></p>\r\n                  <h6>{{this.healthProg?.data?.TotalFracked}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                  <p>Total Counterfeit Coins <span>(deleted from the Wallet)</span></p>\r\n                  <h6>{{this.healthProg?.data?.TotalCounterfeit}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                  <p>Total Skipped Coins <span>(already Fracked)</span></p>\r\n                  <h6>{{this.healthProg?.data?.TotalAlreadyFracked}}</h6>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"\" *ngIf=\"skyHealthProgress && healthProg?.status === 'completed'\">\r\n                <div class=\"ml-n3\">\r\n                  <p>You can click FIX to synchronize your wallet on all RAIDA. You can also click on a\r\n                    serial number to fix a single coin</p>\r\n                </div>\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"healthListDiv\">\r\n                  <table class=\"text-white table table-bordered table-responsive-sm text-center\">\r\n                    <tr>\r\n                      <th></th>\r\n                      <th>R0</th>\r\n                      <th>R1</th>\r\n                      <th>R2</th>\r\n                      <th>R3</th>\r\n                      <th>R4</th>\r\n                      <th>R5</th>\r\n                      <th>R6</th>\r\n                      <th>R7</th>\r\n                      <th>R8</th>\r\n                      <th>R9</th>\r\n                      <th>R10</th>\r\n                      <th>R11</th>\r\n                      <th>R12</th>\r\n                      <th>R13</th>\r\n                      <th>R14</th>\r\n                      <th>R15</th>\r\n                      <th>R16</th>\r\n                      <th>R17</th>\r\n                      <th>R18</th>\r\n                      <th>R19</th>\r\n                      <th>R20</th>\r\n                      <th>R21</th>\r\n                      <th>R22</th>\r\n                      <th>R23</th>\r\n                      <th>R24</th>\r\n                      <th>RES</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Balance</td>\r\n                      <td *ngFor=\"let balance of healthProg?.data?.balances\"\r\n                        [ngStyle]=\"{'background-color' : getColor(balance)}\">{{balance}}</td>\r\n                      <td>{{healthProg?.data?.quorum_balance}}</td>\r\n                    </tr>\r\n                    <tr *ngFor=\"let sns of healthProg?.data?.sns | keyvalue; let i = index;\">\r\n                      <td><a href=\"#\" class=\"\">{{sns.key}}</a></td>\r\n                      <td *ngFor=\"let elem of sns.value\" [ngStyle]=\"{'background-color' : elem > 1 ? 'red' : 'green' }\">\r\n                        <span [ngClass]=\"elem == 1 ? 'fa fa-check' : 'fa fa-minus'\"></span>\r\n                      </td>\r\n                      <td>{{healthProg?.data?.quorum_balance}}</td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"linesection\" *ngIf=\"fixSkyvault\">\r\n              <div class=\"headthSubHed\">\r\n                <h4>Synchronization Complete for the wallet: <span>{{cSelectorTextEight}}</span></h4>\r\n                <p class=\"ml-n3 text-white\">A request to synchronize your wallet was sent to the RAIDA. Please check\r\n                  your\r\n                  SkyVault health again to see if the synchronization was completed.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tabBackupCont\" *ngIf=\"tabSelector == 'backup'\">\r\n            <h2 class=\"subHedOne\">Backup</h2>\r\n            <p class=\"subTitleTwo\">Backup will allow you to create a backup of your coins.</p>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"lineSection\">\r\n              <div class=\"inputSelectTwo\">\r\n                <div class=\"inputSelectTwo\">\r\n                  <div class=\"customeDropdownTwo\">\r\n                    <div class=\"triger\" (click)=\"backupToggler()\">\r\n                      <img [src]=\"cSelectorImgNine\" alt=\"image\" *ngIf=\"cSelectorImgNine != ''\">\r\n                      <span>{{cSelectorTextNine}}</span>\r\n                    </div>\r\n                    <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenNine\">\r\n                      <div class=\"menus\" (click)=\"customSelectorNine(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                        <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                        <span>{{data.name}}</span>\r\n                      </div>\r\n                      <!-- <div class=\"menus\" (click)=\"customSelectorNine('user14')\">\r\n                    <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                    <span>johny4</span>\r\n                  </div>\r\n                  <div class=\"menus\" (click)=\"customSelectorNine('user15')\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>johnHaltiwanger.skywallet.cc</span>\r\n                  </div>\r\n                  <div class=\"menus\" (click)=\"customSelectorNine('user16')\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>johnPersonal.skywallet.cc</span>\r\n                  </div> -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"gap20\"></div>\r\n              <div class=\"backupSectionOne\">\r\n                <div class=\"formFieldThree\">\r\n                  <label for=\"\">Existing Password</label>\r\n                  <div class=\"inputLine\">\r\n                    <input [type]=\"backupExtPswShow ? 'password' : 'text'\">\r\n                    <button (click)=\"toggleBkpPswType()\">\r\n                      <img src=\"{{ backupExtPswShow ? 'assets/eyeopen.svg' : 'assets/eyeclose.svg'}}\" type=\"button\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"formField\">\r\n                  <label for=\"\">Backup Folder</label>\r\n                  <div class=\"parentContainer\">\r\n                    <div class=\"controlContainer\">\r\n                      <div class=\"inputFileHolder\">\r\n                        <a href=\"javascript:;\" title=\"Browse\">\r\n                          <img src=\"assets/folder-border.svg\" alt=\"\">\r\n                        </a>\r\n                        <input id=\"fileInput\" name=\"fileInput\" class=\"fileInput\" title=\"Choose file to upload\"\r\n                          type=\"file\" accept=\".txt\">\r\n                      </div>\r\n                      <div class=\"inputFileMask\">\r\n                        <input class=\"inputFileMaskText\" readonly=\"readonly\" placeholder=\"Choose backup folder.\"\r\n                          type=\"text\" id=\"inputFileMaskText\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"formField\">\r\n                  <label for=\"\">Remarks (Optional)</label>\r\n                  <input type=\"text\" placeholder=\"Ex: Latest backup\">\r\n                </div>\r\n              </div>\r\n              <div class=\"backupSectionTwo\">\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"headthSubHed\">\r\n                  <h4>Backup completed for the wallet: <span>johnHaltiwanger.skyvaultt.cc</span></h4>\r\n                </div>\r\n                <div class=\"healthList\">\r\n                  <div class=\"gap20\"></div>\r\n                  <div class=\"healthListDiv\">\r\n                    <p style=\"margin-left: 0px;\">Total CC Backed up</p>\r\n                    <h6>:1000CC</h6>\r\n                  </div>\r\n                  <div class=\"gap10\"></div>\r\n                  <div class=\"healthListDiv\">\r\n                    <p style=\"margin-left: 0px;\">Downloaded to</p>\r\n                    <h6 style=\"color: #0884FF;\">..chimpy/Desktop</h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tabFrackedCont\" *ngIf=\"tabSelector == 'fixFracked'\">\r\n            <h2 class=\"subHedOne\">Fix Fracked</h2>\r\n            <p class=\"subTitleTwo\">Fix your damaged/fracked Coins.</p>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"lineSection\" *ngIf=\"!fixProgress\">\r\n              <div class=\"inputSelectTwo\">\r\n                <label for=\"\">Choose wallet</label>\r\n                <div class=\"customeDropdownTwo\">\r\n                  <div class=\"triger\" (click)=\"frackedToggler()\">\r\n                    <img [src]=\"cSelectorImgTen\" alt=\"image\" *ngIf=\"cSelectorImgTen != ''\">\r\n                    <span>{{cSelectorTextTen}}</span>\r\n                  </div>\r\n                  <div class=\"menuShowTwo\" *ngIf=\"customSelectorOpenTen\">\r\n                    <div class=\"menus\" (click)=\"customSelectorTen(data.name, 'local')\" *ngFor=\"let data of all\">\r\n                      <img src=\"assets/folder-w-border.svg\" alt=\"icon\">\r\n                      <span>{{data.name}}</span>\r\n                    </div>\r\n                    <!-- <div class=\"menus\" (click)=\"customSelectorTen(sky.name, 'sky')\" *ngFor=\"let sky of allSky\">\r\n                    <img src=\"assets/cloud-transfer.svg\" alt=\"icon\">\r\n                    <span>{{sky.name}}</span>\r\n                  </div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"fixFrackedOne\">\r\n              <div class=\"headthSubHed\" *ngIf=\"fixProgress\">\r\n                <h4>Fixing the fracked coins of the wallet: <span>{{cSelectorTextTen}}</span></h4>\r\n              </div>\r\n              <div class=\"progressWrap\" *ngIf=\"fixProgress && !goTODash\">\r\n                <div class=\"progress\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{'width': fixProg?.progress + '%'}\"\r\n                    aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\">Checking your wallet</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"formField\" *ngIf=\"fixProg?.progress == '100' && !goTODash && fixProgress\">\r\n                <div class=\"checkboxInpHolder\">\r\n                  <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Fixed the damaged\r\n                    CloudCoins</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"gap10\"></div>\r\n            <div class=\"fixfrackedTwo\" *ngIf=\"fixProg?.status === 'completed' && goTODash\">\r\n              <div class=\"healthList\">\r\n                <div class=\"healthListDiv\">\r\n                  <p>Total Checked Coins</p>\r\n                  <h6>{{fixProg?.data?.total_fixed + fixProg?.data?.total_skipped + fixProg?.data?.total_errors}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                  <p>Successfully Fixed coins</p>\r\n                  <h6>{{fixProg?.data?.total_fixed}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                  <p>Total skipped coins</p>\r\n                  <h6>{{fixProg?.data?.total_skipped}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                  <p>Failed to Fix</p>\r\n                  <h6>{{fixProg?.data?.total_errors}}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tabRaidaStat\" *ngIf=\"tabSelector == 'raida'\">\r\n            <div>\r\n              <h2 class=\"subHedOne\">RAIDA Status and Echo Times </h2>\r\n            </div>\r\n            <div class=\"raidaStatOuter\">\r\n              <div class=\"raidaStatWrap\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-6 col-lg-4 col-xl-3\">\r\n                    <table>\r\n                      <tr *ngFor=\"let data of latencies | slice: 0:13; let i = index;\">\r\n                        <td>\r\n                          <span class=\"raidaStatDesc\">RAIDA {{ ('0' + i).slice(-2)}}</span>\r\n                          <span class=\"raidaStatDesc ml-4\" [ngStyle]=\"{color : data === 0 ? 'red' : 'green' }\">{{data\r\n                            ===\r\n                            0 ? \"TIMED OUT\" : (data/1000).toFixed(3)+' sec'}}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                  <div class=\"col-6 col-lg-4 col-xl-3\">\r\n                    <table>\r\n                      <tr *ngFor=\"let data of latencies | slice:  13: 25; let j = index;\">\r\n                        <td>\r\n                          <span class=\"raidaStatDesc\">RAIDA {{j + 13}}</span>\r\n                          <span class=\"raidaStatDesc ml-4\" [ngStyle]=\"{color : data === 0 ? 'red' : 'green' }\">{{data\r\n                            ===\r\n                            0 ? \"TIMED OUT\" : (data/1000).toFixed(3)+' sec'}}</span>\r\n                        </td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                  <div class=\"col-8\">\r\n\r\n                    <div class=\"gap20\"></div>\r\n                    <!--  -->\r\n                    <span *ngIf=\"isTimeout\" class=\"textOne\" style=\"opacity: 0.7;\">TIMED OUT means the response exceeded\r\n                      the seconds allowed to respond. This could be caused by a slow network or because the RAIDA was\r\n                      blocked (usually by office routers). It could also be caused by your computer being old and unable\r\n                      to\r\n                      handle 25 threads at once. Try changing your settings to increase the timeout. Or try using a more\r\n                      powerful computer.</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"tabRaidaStat\" *ngIf=\"tabSelector == 'trusted'\">\r\n            <h2 class=\"subHedOne\">Trusted RAIDA</h2>\r\n            <div class=\"raidaStatOuter\">\r\n              <div class=\"raidaStatWrap\">\r\n                <div class=\"row\">\r\n                  <div class=\"col\">\r\n                    <div class=\"formInline row mt-4\">\r\n                      <div class=\"col-auto custom_check custom_check_radio\">\r\n                        <input type=\"radio\" name=\"radio\" value=\"gardian\" id=\"same\" (change)=\"changRadio($event)\">\r\n                        <label for=\"same\">Use the Guardians' RAIDA hints file</label>\r\n                      </div>\r\n                      <div class=\"col-auto custom_check custom_check_radio\">\r\n                        <input type=\"radio\" name=\"radio\" value=\"local\" id=\"other\" (change)=\"changRadio($event)\">\r\n                        <label for=\"other\">Use the local RAIDA hints file</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-6 col-lg-4 col-xl-3\">\r\n\r\n                  </div>\r\n                  <div class=\"col-6 col-lg-4 col-xl-3\">\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"footerFixed\" *ngIf=\"tabSelector != 'general'\">\r\n      <button class=\"btnCustomBlack disabled\">Save changes</button>\r\n    </div> -->\r\n    <div class=\"footerFixed\" *ngIf=\"tabSelector == 'performance'\">\r\n      <button class=\"btnCustomBlack\" (click)=\"taskSetting()\" [ngClass]=\"{'btnDisable': settings == false}\">Save\r\n        changes</button>\r\n    </div>\r\n    <!-- <div class=\"footerFixed\" >\r\n    <button class=\"btnCustomBlue disabled\">Save</button>\r\n  </div> -->\r\n    <!-- <div class=\"footerFixed\" *ngIf=\"tabSelector == 'passkey'\">\r\n    <button class=\"btnCustomBlue\" [ngClass]=\"{'btnDisable': passkeyImage == ''}\" (click)=\"donwload()\">download as\r\n      PNG</button>\r\n  </div> -->\r\n    <!-- <div class=\"footerFixed\" >\r\n    <button class=\"btnCustomBlue disabled\">clear history</button>\r\n  </div> -->\r\n    <!-- <div class=\"footerFixed\" >\r\n    <button class=\"btnCustomBlue disabled\">download as csv</button>\r\n  </div> -->\r\n    <div class=\"footerFixed\" *ngIf=\"tabSelector == 'healthCheck'\">\r\n      <div *ngIf=\"!fixSkyvault\">\r\n        <button class=\"btnCustomBlue\" *ngIf=\"(skyHealthProgress === false) && (healthProgress === false)\"\r\n          [ngClass]=\"{'btnDisable': health == false}\" (click)=\"health ? checkhealth() : ''\">continue</button>\r\n        <button class=\"btnCustomBlue\" *ngIf=\"healthProgress || skyHealthProgress\"\r\n          [ngClass]=\"{'btnDisable': goTODash === false }\" (click)=\"goTODash ? backHealth() : ''\">Back</button>\r\n        <button class=\"btnCustomBlue ml-4\" *ngIf=\"skyHealthProgress && healthProg?.status === 'completed'\"\r\n          (click)=\"fixSky()\">\r\n          Fix\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"fixSkyvault\">\r\n        <button class=\"btnCustomBlue\" (click)=\"backFixsky()\">Back</button>\r\n      </div>\r\n\r\n\r\n      <!-- <button class=\"btnCustomBlue mr-3\" *ngIf=\"skyHealthProgress\" [ngClass]=\"{'btnDisable': goTODash === false }\"\r\n        (click)=\"goTODash ? router.navigate(['/dashboard/home']) : ''\">Fix</button> -->\r\n    </div>\r\n    <!-- <div class=\"footerFixed\" >\r\n    <button class=\"btnCustomBlue btnDisable\">backup</button>\r\n  </div> -->\r\n    <div class=\"footerFixed\" *ngIf=\"tabSelector == 'fixFracked'\">\r\n      <button class=\"btnCustomBlue\" *ngIf=\"!fixProgress\" [ngClass]=\"{'btnDisable': frackContinue == false}\"\r\n        (click)=\"frackContinue ? fixFracked() : ''\">continue</button>\r\n      <button class=\"btnCustomBlue\" *ngIf=\"fixProgress\" [ngClass]=\"{'btnDisable': goTODash === false }\"\r\n        (click)=\"goTODash ? backFix(): ''\">Back</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- modal delete User-->\r\n  <div class=\"modalContainer\" *ngIf=\"deleteUserModal\">\r\n    <div class=\"modalOverlay\" (click)=\"deleteUserModalToggler()\"></div>\r\n    <div class=\"modalWrap modalMedium\">\r\n      <div class=\"modalHeader\">\r\n        <h1>Delete Wallet</h1>\r\n        <div class=\"modalClose\" (click)=\"deleteUserModalToggler()\">\r\n          <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n        </div>\r\n      </div>\r\n      <div class=\"modalBody\">\r\n        <div class=\"gap20\"></div>\r\n        <div class=\"sectionOne\">\r\n          <h2 class=\"modalSubhed\">You will not be able to send or receive CC using this wallet.</h2>\r\n          <h2 class=\"modalSubhed\">Are you sure you want to delete your wallet: {{this.cSelectorTextThree}}? </h2>\r\n          <div class=\"gap20\"></div>\r\n          <form [formGroup]=\"deleteForm\">\r\n            <!-- <div class=\"formField\">\r\n            <label class=\"checkboxInpHolder checkBoxWrap\">\r\n              <input type=\"checkbox\" formControlName=\"check1\"><span>Backup log files and transaction history.</span>\r\n            </label>\r\n          </div> -->\r\n            <div class=\"formField\">\r\n              <label class=\"checkboxInpHolder checkBoxWrap\">\r\n                <input type=\"checkbox\" formControlName=\"check2\"><span>I understand that this process is permanent and\r\n                  irreversable.</span>\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"gap50\"></div>\r\n      </div>\r\n      <div class=\"modalFooter\">\r\n        <div class=\"buttonWrap\">\r\n          <button class=\"btnCustomBlue buttonWide\" [ngClass]=\"{'disabled': this.deleteForm.invalid}\"\r\n            (click)=\"delete()\">Yes, delete wallet</button>\r\n          <button class=\"cancelTransparent\" (click)=\"deleteUserModalToggler()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- modal delete User-->\r\n\r\n  <!-- modal Remove Password Protection-->\r\n  <div class=\"modalContainer\" *ngIf=\"removeProModal\">\r\n    <div class=\"modalOverlay\" (click)=\"removeProModalToggler()\"></div>\r\n    <div class=\"modalWrap modalMedium\">\r\n      <div class=\"modalHeader\">\r\n        <h1>Are you sure?</h1>\r\n        <div class=\"modalClose\" (click)=\"removeProModalToggler()\">\r\n          <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n        </div>\r\n      </div>\r\n      <div class=\"modalBody\">\r\n        <div class=\"gap20\"></div>\r\n        <div class=\"sectionOne\" style=\"display: flex; justify-content: flex-start; align-items: center;\">\r\n          <img src=\"assets/warning.svg\" alt=\"icon\" style=\"margin-right: 15px; width: 40px;\">\r\n          <h2 class=\"modalSubhed\"> If you remove your password protection, anyone on your computer can acess your local\r\n            wallet: johny4 </h2>\r\n        </div>\r\n        <div class=\"gap50\"></div>\r\n      </div>\r\n      <div class=\"modalFooter\">\r\n        <div class=\"buttonWrap\">\r\n          <button class=\"btnCustomRed buttonWide\">REMOVE PASSWORD PROTECTION</button>\r\n          <button class=\"cancelTransparent\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- modal Remove Password Protection-->\r\n\r\n  <!-- modal Remove recovery email-->\r\n  <div class=\"modalContainer\" *ngIf=\"removeProModalTwo\">\r\n    <div class=\"modalOverlay\" (click)=\"removeProModalTogglerTwo()\"></div>\r\n    <div class=\"modalWrap modalMedium\">\r\n      <div class=\"modalHeader\">\r\n        <h1>Are you sure?</h1>\r\n        <div class=\"modalClose\" (click)=\"removeProModalTogglerTwo()\">\r\n          <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n        </div>\r\n      </div>\r\n      <div class=\"modalBody\">\r\n        <div class=\"gap20\"></div>\r\n        <div class=\"sectionOne\" style=\"display: flex; justify-content: flex-start; align-items: center;\">\r\n          <img src=\"assets/warning.svg\" alt=\"icon\" style=\"margin-right: 15px; width: 40px;\">\r\n          <h2 class=\"modalSubhed\"> If you remove the recovery email from your coins, you will NOT be able to recover\r\n            your coins if they are lost!</h2>\r\n        </div>\r\n        <div class=\"gap50\"></div>\r\n      </div>\r\n      <div class=\"modalFooter\">\r\n        <div class=\"buttonWrap\">\r\n          <button class=\"btnCustomRed buttonWide\">REMOVE RECOVERY EMAIL</button>\r\n          <button class=\"cancelTransparent\">Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- modal Remove Password Protection-->\r\n  <div class=\"onEventLoadWrap\" *ngIf=\"showLoader\">\r\n    <ng-container>\r\n      <div class=\"text-center loader_show\">\r\n        <ng-lottie height=\"150px\" [options]=\"options\" (animationCreated)=\"animationCreated($event)\"></ng-lottie>\r\n        <span style=\"color:#ffffff\">Loading image...</span>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <script>\r\n    const range = new mdb.Range(document.getElementById('range'));\r\n  </script>\r\n"],"sourceRoot":"webpack:///"}