{"version":3,"sources":["./src/app/dashboard/create-nft-wallet/import-nft/import-nft-routing.module.ts","./src/app/dashboard/create-nft-wallet/import-nft/import-nft.module.ts","./src/app/dashboard/create-nft-wallet/import-nft/import-nft.component.ts","./src/app/dashboard/create-nft-wallet/import-nft/import-nft.component.html"],"names":[],"mappings":"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","file":"create-nft-wallet-import-nft-import-nft-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {ImportNftComponent } from './import-nft.component'\r\nimport { CommonModule } from '@angular/common';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ImportNftComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes),\r\n        CommonModule\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ImportNftRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ImportNftRoutingModule } from './import-nft-routing.module';\r\nimport { ImportNftComponent } from './import-nft.component'\r\nimport { LottieModule } from 'ngx-lottie';\r\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\n@NgModule({\r\n    declarations: [ImportNftComponent],\r\n    imports: [\r\n        CommonModule,\r\n        ImportNftRoutingModule,\r\n        LottieModule,\r\n        ReactiveFormsModule, FormsModule\r\n    ]\r\n})\r\nexport class ImportNftModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { faWindowRestore } from '@fortawesome/free-solid-svg-icons';\r\nimport { AnimationItem } from 'lottie-web';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-import-nft',\r\n  templateUrl: './import-nft.component.html',\r\n  styleUrls: ['./import-nft.component.scss']\r\n})\r\nexport class ImportNftComponent implements OnInit {\r\n\r\n  userLocal: string;\r\n  file: any = [];\r\n  filepick: any[] = [];\r\n  files: any[] = [];\r\n  base: any = [];\r\n  tag: any;\r\n  type: string;\r\n  totalimport: any;\r\n  payload: any;\r\n  btn: boolean = true;\r\n  loadingMessage: string;\r\n  showLoader: boolean;\r\n  options: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/cloud_loading.json'\r\n  };\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private router: Router,\r\n    private storage: EventService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userLocal = localStorage.getItem('userLocal');\r\n    this.type = localStorage.getItem('wallet');\r\n  }\r\n\r\n\r\n  async getPath() {\r\n    try {\r\n      let response: any = await this.api.importFile();\r\n      if (response.status == \"success\") {\r\n        this.files = response?.payload?.items_picked;\r\n        this.btn = false;\r\n        for (let i = 0; i < this.files.length; i++) {\r\n          var last = this.files[i].substring(this.files[i].lastIndexOf(\".\") + 1, this.files[i].length);\r\n          var file = this.files[i]\r\n          var pop = file.split('.').slice(0, -1).join('.')\r\n          var pop2 = pop.split('.').pop();\r\n          if (pop2 != 'ccnft') {\r\n            Swal.fire({\r\n              title: 'Please make sure all the files that you have selected have proper format',\r\n              icon: 'info',\r\n              confirmButtonText: 'Okay'\r\n            })\r\n            this.files = [];\r\n            this.btn = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  async importNFT() {\r\n    console.log(\"test\")\r\n    try {\r\n      for (let i = 0; i < this.files?.length; i++) {\r\n        this.base.push({ 'type': 'file', 'data': this.files[i] })\r\n      }\r\n      var data = {\r\n        name: \"NFTs\",\r\n        tag: this.tag,\r\n        items: this.base\r\n      }\r\n      this.showLoading(true);\r\n      this.loadingMessage = 'Importing NFTs...'\r\n      let response: any = await this.api.import(data);\r\n      if (response.status === \"success\") {\r\n        console.log('hi');\r\n        this.doCheck(response.payload?.id, (data: any) => {\r\n\r\n        });\r\n      } else {\r\n        this.showLoading(false);\r\n        Swal.fire({\r\n          title: response.payload.message,\r\n          icon: 'error',\r\n          confirmButtonText: 'Okay',\r\n        }).then((result) => {\r\n          if (result.value) { { } }\r\n        });\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doCheck(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          if ((this.payload?.data?.pown_results?.fracked != 0) || (this.payload?.data?.pown_results?.limbo != 0) || this.payload?.data?.pown_results?.counterfeit != 0) {\r\n            Swal.fire({\r\n              title: 'Failed to Import. The NFT that you are trying to import is not Authentic.',\r\n              icon: 'error',\r\n              confirmButtonText: 'Okay'\r\n            });\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 3000)\r\n          }\r\n          else {\r\n            this.showLoading(false);\r\n            Swal.fire({\r\n              title: 'Successfully imported NFT to NFT Gallery',\r\n              icon: 'success',\r\n              confirmButtonText: 'Okay'\r\n            });\r\n            this.router.navigate(['/dashboard/create-nft-gallery']);\r\n          }\r\n        }\r\n        else {\r\n          this.showLoading(false)\r\n          this.files = [];\r\n          this.btn = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay'\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheck(taskID, xdata)\r\n      }, 500)\r\n\r\n    }\r\n\r\n  }\r\n  deleteFile(index: number) {\r\n    this.files.splice(index, 1);\r\n\r\n    if (this.files.length == 0) {\r\n      this.btn = true;\r\n\r\n    }\r\n  }\r\n\r\n  animationCreated(animationItem: AnimationItem): void {\r\n    console.log(animationItem);\r\n  }\r\n\r\n  showLoading(state): void {\r\n    this.loadingMessage = '';\r\n    if (state) {\r\n      this.showLoader = true;\r\n\r\n    } else {\r\n      this.showLoader = false;\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"transWrapper\">\r\n    <div class=\"headerbackWrap\">\r\n        <a href=\"javascript:;\" routerLink=\"/dashboard/create-nft-gallery\" class=\"backBtnInHeader\"><img src=\"assets/arrow.svg\"\r\n                alt=\"\"></a>\r\n        <span class=\"titleOne\">Import NFT</span>\r\n    </div>\r\n    <div class=\"transBody\">\r\n        <div class=\"gap20\"></div>\r\n\r\n        <div class=\"formField\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                    <label for=\"username\">Select a file to Import:</label>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                    <div class=\"filepicker\">\r\n                        <span>{{files}}</span>\r\n                        <div class=\"icon_wrap\" (click)=\"getPath()\">\r\n                            <img src=\"assets/folder_icon.svg\" alt=\"\" class=\"folderIcon\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"gap20\"></div>\r\n        \r\n        <div class=\"col-6 mt-2\">\r\n                <!-- <div class=\"progressWrap\" *ngIf=\"successInfo\">\r\n                    <div class=\"progress\">\r\n                        <div class=\"progress-bar progress-bar-striped\" role=\"progressbar\"\r\n                            style=\"background-color: green!important;\" [ngStyle]=\"{'width': payload.progress + '%'}\"\r\n                            aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                        </div>\r\n                    </div>\r\n                </div> -->\r\n        <div class=\"\" *ngIf=\" this.files.length == 1 || this.files.length > 1\">\r\n            <div class=\"file_upload justify-content-between\">\r\n                <div class=\"position-relative uploadtextWrap\">\r\n                    <span class=\"pl-2 text-white text-left progress_text\" style=\"display: flex; align-items: center;\">\r\n                        Total number of files selected :\r\n                        {{this.files.length}}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"\">\r\n            <div class=\"file_upload justify-content-between\" *ngFor=\"let d of files; let i = index\">\r\n                <div class=\"position-relative uploadtextWrap\">\r\n                    <span class=\"pl-2 text-white text-left progress_text\" style=\"display: flex; align-items: center;\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                            class=\"bi bi-cloud-download\" viewBox=\"0 0 16 16\">\r\n                            <path\r\n                                d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\" />\r\n                            <path\r\n                                d=\"M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708l3 3z\" />\r\n                        </svg>\r\n                        <label class=\"pl-2 ulpldText\">{{ d }}</label>\r\n                    </span>\r\n                </div>\r\n                <a href=\"javascript:;\" class=\"fa fa-trash text-danger fs-32 pt-1\" (click)=\"deleteFile(i)\"></a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n        \r\n\r\n        <div class=\"transBottomFooter\">\r\n            <a href=\"javascript:;\" [ngClass]=\"{'btnDisable' : btn}\" class=\"btnCustomBlue btnLarge\"\r\n                (click)=\"importNFT()\">Import selected files</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"onEventLoadWrap\" *ngIf=\"showLoader\">\r\n    <ng-container>\r\n        <div class=\"text-center  loader_show\">\r\n            <ng-lottie height=\"150px\" [options]=\"options\" (animationCreated)=\"animationCreated($event)\"></ng-lottie>\r\n            <span style=\"color:#ffffff\">{{loadingMessage}}</span>\r\n        </div>\r\n    </ng-container>\r\n</div>"],"sourceRoot":"webpack:///"}