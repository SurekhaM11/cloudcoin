{"version":3,"sources":["./src/app/auth/create-skywallet/create-address/username.validator.ts","./src/app/services/login.service.ts","./src/app/auth/create-localwallet/setup-mail-psw/custom-validators.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAO,MAAM,iBAAiB;IAC1B,MAAM,CAAC,kBAAkB,CAAC,OAAwB;QAC9C,IAAI,OAAO,CAAC,KAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;YAC3C,OAAO,EAAC,kBAAkB,EAAE,IAAI,EAAC;SACpC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAyC;AACA;;AAKlC,MAAM,YAAY;IAMvB;QAJQ,eAAU,GAAG,KAAK,CAAC;QAC3B,gBAAW,GAAiB,IAAI,4CAAO,EAAO,CAAC;QACvC,cAAS,GAAQ,IAAI,CAAC;QAG5B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAE5C,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,WAAW,EAAE,EACtB;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SAC/C;aAED;YACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;IACH,CAAC;IAED,WAAW;QAET,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;YACxC,2CAA2C;YAC1C,IAAI;gBACF,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClD,8BAA8B;gBAC9B,mBAAmB;gBACnB,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,KAAK,EAAE,EAC/D;oBACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;aACF;YACD,OAAO,CAAC,EACR;gBACE,kBAAkB;gBAClB,oCAAoC;gBACpC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBACnC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;aACI;YACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;;wEAxDU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACHD;AAAA;AAAO,MAAM,gBAAgB;IAC3B,MAAM,CAAC,gBAAgB,CAAC,KAAa,EAAE,KAAuB;QAC5D,OAAO,CAAC,OAAwB,EAA0B,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAClB,sCAAsC;gBACtC,OAAO,IAAI,CAAC;aACb;YAED,4DAA4D;YAC5D,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAExC,wFAAwF;YACxF,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;CACF","file":"common.js","sourcesContent":["import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n  \r\nexport class UsernameValidator {\r\n    static cannotContainSpace(control: AbstractControl) : ValidationErrors | null {\r\n        if((control.value as string).indexOf(' ') >= 0){\r\n            return {cannotContainSpace: true}\r\n        }\r\n  \r\n        return null;\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private isLoggedIn = false;\r\n  loginStatus: Subject<any> = new Subject<any>();\r\n  private cloudcoin: any = null;\r\n\r\n  constructor() {\r\n    this.getLoggedIn();\r\n  }\r\n\r\n  checkLoginStatus(): void {\r\n    this.loginStatus.next(this.getLoggedIn());\r\n\r\n  }\r\n\r\n  watch(): Observable<any> {\r\n    return this.loginStatus.asObservable();\r\n  }\r\n\r\n  getToken(): any {\r\n    if (this.getLoggedIn())\r\n    {\r\n      return JSON.parse(localStorage.getItem('cc'));\r\n    }\r\n    else\r\n    {\r\n      this.checkLoginStatus();\r\n    }\r\n  }\r\n\r\n  getLoggedIn(): boolean\r\n  {\r\n    if (localStorage.getItem('cc') !== null) {\r\n     // console.log(localStorage.getItem('cc'));\r\n      try {\r\n        const cc = JSON.parse(localStorage.getItem('cc'));\r\n        // console.log('parsed coin');\r\n        // console.log(cc);\r\n        if (cc.sn && cc.sn > 0 && cc.an !== null && cc.an.length === 25)\r\n        {\r\n          this.isLoggedIn = true;\r\n        }\r\n      }\r\n      catch (e)\r\n      {\r\n        // console.log(e);\r\n        // console.log('cannot parse coin');\r\n        this.isLoggedIn = false;\r\n        localStorage.setItem('cc', 'null');\r\n        localStorage.removeItem('cc');\r\n      }\r\n    }\r\n    else {\r\n      this.isLoggedIn = false;\r\n    }\r\n    return this.isLoggedIn;\r\n  }\r\n}\r\n","import { ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n  static patternValidator(regex: RegExp, error: ValidationErrors): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any } => {\r\n      if (!control.value) {\r\n        // if control is empty return no error\r\n        return null;\r\n      }\r\n\r\n      // test the value of the control against the regexp supplied\r\n      const valid = regex.test(control.value);\r\n\r\n      // if true, return no error (no error), else return error passed in the second parameter\r\n      return valid ? null : error;\r\n    };\r\n  }\r\n}"],"sourceRoot":"webpack:///"}