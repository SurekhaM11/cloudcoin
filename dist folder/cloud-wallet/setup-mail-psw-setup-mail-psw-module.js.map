{"version":3,"sources":["./src/app/auth/create-localwallet/setup-mail-psw/setup-mail-psw.module.ts","./src/app/auth/create-localwallet/setup-mail-psw/setup-mail-psw-routing.module.ts","./src/app/auth/create-localwallet/setup-mail-psw/setup-mail-psw.component.ts","./src/app/auth/create-localwallet/setup-mail-psw/setup-mail-psw.component.html"],"names":[],"mappings":"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","file":"setup-mail-psw-setup-mail-psw-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SetupMailPswRoutingModule } from './setup-mail-psw-routing.module';\r\nimport { SetupMailPswComponent } from './setup-mail-psw.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [SetupMailPswComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SetupMailPswRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class SetupMailPswModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SetupMailPswComponent } from './setup-mail-psw.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SetupMailPswComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SetupMailPswRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CustomValidators } from './custom-validators';\r\n\r\n@Component({\r\n  selector: 'app-setup-mail-psw',\r\n  templateUrl: './setup-mail-psw.component.html',\r\n  styleUrls: ['./setup-mail-psw.component.scss']\r\n})\r\nexport class SetupMailPswComponent implements OnInit {\r\n\r\n  setupForm: FormGroup;\r\n  fieldTextType: boolean;\r\n  isCheck : boolean = false;\r\n  isSelect: boolean = false;\r\n  isLow: boolean = false;\r\n  isMedium: boolean = false;\r\n  isStrong: boolean = false;\r\n  user : string;\r\n  successInfo: boolean = true;\r\n  errorInfo: boolean;\r\n  errorMsg: string;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private raida: ApiService) {\r\n    this.setupForm = this.fb.group({\r\n      password: [null,\r\n        Validators.compose([\r\n          Validators.required,\r\n          CustomValidators.patternValidator(/[A-Z]/, {\r\n            hasCapitalCase: true\r\n          }),\r\n          CustomValidators.patternValidator(\r\n            /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/,\r\n            {\r\n              hasSpecialCharacters: true\r\n            }\r\n          ),\r\n          Validators.minLength(8)\r\n        ])\r\n      ],\r\n      email: [null, [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]]\r\n    })\r\n    this.user = localStorage.getItem('userLocal');\r\n   }\r\n\r\n  ngOnInit(): void { \r\n  }\r\n\r\n  setNewvalues(e){\r\n    let z = this.setupForm.get('password').value\r\n    if ((/[A-Z]/.test(z) && z.length >= 8) || (z.length > 8 && /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(z)) || (/[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(z) &&  /[A-Z]/.test(z) )){\r\n      this.isMedium = true;\r\n      this.isLow = false;\r\n      this.isStrong = false;\r\n    }\r\n    else{\r\n      this.isMedium =false;\r\n      this.isLow = false;\r\n      this.isStrong =  false;\r\n    }\r\n  }\r\n\r\n  isValidInput(value: any){\r\n    return this.setupForm.controls[value].invalid &&\r\n    (this.setupForm.controls[value].dirty || this.setupForm.controls[value].touched);\r\n  }\r\n\r\n  getStats(e){\r\n    this.isCheck = e.target.checked;\r\n    if(this.isCheck == false) {\r\n      this.setupForm.controls['password'].disable();\r\n      this.setupForm.controls['password'].patchValue('');\r\n    } else {\r\n       this.setupForm.controls['password'].enable();\r\n    } \r\n  }\r\n\r\n  getStatus(e){\r\n    this.isSelect = e.target.checked;\r\n    if(this.isSelect == false) {\r\n      this.setupForm.controls['email'].disable();\r\n      this.setupForm.controls['email'].patchValue('');\r\n    } else {\r\n       this.setupForm.controls['email'].enable();\r\n    } \r\n  }\r\n\r\n  toggleFieldTextType() {\r\n    this.fieldTextType = !this.fieldTextType;\r\n  }\r\n\r\n  async save(){\r\n    try{\r\n      let idata = {\r\n        name: this.user,\r\n        email: this.setupForm.controls.email.value\r\n        }\r\n        let wallet: any = await this.raida.addWallet(idata);        \r\n        if(wallet.status == 'success'){\r\n          this.successInfo = true;\r\n          this.errorInfo = false;\r\n          this.router.navigate(['/localwallet/uplaod-local-cc']);\r\n        }\r\n        else{\r\n          this.errorInfo = true;\r\n          this.successInfo = false;\r\n          this.errorMsg = \"Error!! \" + wallet.payload.message;\r\n          // this.router.navigate(['/localwallet/localstep-completed']);\r\n        }\r\n     }\r\n     catch(e){\r\n      this.errorInfo = true;\r\n      this.errorMsg = \"Create Wallet Failed\";\r\n     }\r\n    localStorage.setItem('emailAdd', this.setupForm.controls.email.value);\r\n    localStorage.setItem('passLocal', this.setupForm.controls.password.value);\r\n  }\r\n\r\n}\r\n","<div class=\"authWrapper authWrapperSetPsw\">\r\n    <a href=\"javascript:;\" routerLink=\"/localwallet\" class=\"backlinkBtn\"><img src=\"assets/back_arrow.svg\" alt=\"\"></a>\r\n    <div class=\"bodyInnerWrapper\">\r\n      <div class=\"stepperHolder\">\r\n        <div class=\"stepperWrap\">\r\n          <div class=\"step stepActive\">\r\n            <div class=\"circleWrap\">\r\n              <div class=\"circle\"></div>\r\n            </div>\r\n            <div class=\"steptextWrap\">\r\n              <span class=\"amount\">Name setup</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"step stepActive\">\r\n            <div class=\"circleWrap\">\r\n              <div class=\"circle\"></div>\r\n            </div>\r\n            <div class=\"steptextWrap\">\r\n              <span class=\"amount\">Security setup</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"step\">\r\n            <div class=\"circleWrap\">\r\n              <div class=\"circle\"></div>\r\n            </div>\r\n            <div class=\"steptextWrap\">\r\n              <span class=\"amount\">Upload CC</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"step\">\r\n            <div class=\"circleWrap\">\r\n              <div class=\"circle\"></div>\r\n            </div>\r\n            <div class=\"steptextWrap\">\r\n              <span class=\"amount\">Completed</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-7\" *ngIf=\"successInfo\">\r\n            <p class=\"titleOne\">Setup password & recovery email for: <span style=\"color: #0884FF;\">{{this.user}}</span></p>\r\n            <p class=\"titleTwo\" style=\"opacity: 0.8;\">Add an extra layer of security to your Localwallet by \r\n              <!-- setting up a strong password and  -->\r\n              enabling recovery email.</p>\r\n            <form [formGroup]=\"setupForm\">\r\n              <div class=\"skyAddressFieldWrap\">\r\n                <div class=\"formField passwordSetWrap\">\r\n                  <div class=\"passwordSetLeft\">\r\n                    <!-- <label for=\"username\">Password</label> -->\r\n                    <!-- <div class=\"custom-control custom-switch position-relative d-flex align-items-center\">\r\n                      <div class=\"check_box\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"setupRecoveryPsw\" type=\"checkbox\" (change)=\"getStats($event)\"\r\n                      data-toggle=\"toggle\"/>\r\n                      <label for=\"setupRecoveryPsw\" class=\"custom-control-label\" >Password \r\n                      </label>\r\n                      </div>\r\n                      <img data-toggle=\"tooltip\" data-placement=\"top\" ngbTooltip=\"This will allow you to recover your password in case you forgot it\" class=\"infoicon mb-1\" src=\"assets/info.svg\" alt=\"\" data-toggle=\"popover\" data-content=\"And here's some amazing content. It's very engaging. Right?\">\r\n                    </div>\r\n                    <div class=\"gap10\"></div>\r\n                    <div class=\"passwordWithIcon\">\r\n                      <input class=\"greyInpField\" (input)=\"setNewvalues($event)\" [type]=\"fieldTextType ? 'text' : 'password'\" formControlName=\"password\" [attr.disabled]=\"'disabled'?'isCheck == false': null\"  placeholder=\"Enter a strong password\" name=\"password\">\r\n                      <button class=\"fa eyeIcon text-white mt-1\"\r\n                      [ngClass]=\"{\r\n                        'fa-eye-slash': !fieldTextType,\r\n                        'fa-eye': fieldTextType\r\n                      }\"\r\n                      (click)=\"toggleFieldTextType()\"></button>\r\n                    </div>\r\n                    <div class=\"gap20\"></div> -->\r\n                    <div class=\"custom-control custom-switch position-relative d-flex align-items-center\">\r\n                      <div class=\"check_box\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"setupRecovery\" type=\"checkbox\"\r\n                      data-toggle=\"toggle\" (change)=\"getStatus($event)\"/>\r\n                      <label for=\"setupRecovery\" class=\"custom-control-label\">Set up recovery email \r\n                      </label>\r\n                      </div>\r\n                      <img data-toggle=\"tooltip\" data-placement=\"top\" ngbTooltip=\"This will allow you to recover your password in case you forgot it\" class=\"infoicon mb-1\" src=\"assets/info.svg\" alt=\"\" data-toggle=\"popover\" data-content=\"And here's some amazing content. It's very engaging. Right?\">\r\n                    </div>\r\n                    <div class=\"gap10\"></div>\r\n                    <input class=\"greyInpField\" type=\"text\" [attr.disabled]=\"'disabled'?'isSelect==false': null\" formControlName=\"email\" placeholder=\"Ex: john.doe@example.com\" name=\"email\" >\r\n                    <div *ngIf=\"isValidInput('email')\">\r\n                      <span class=\"errorMsg\" *ngIf=\"setupForm.controls['email'].hasError('pattern')\"><img src=\"assets/error_info_icon.svg\" alt=\"error icon\">Invalid format</span>\r\n                      <span class=\"errorMsg\" *ngIf=\"setupForm.controls['email'].hasError('required')\"><img src=\"assets/error_info_icon.svg\" alt=\"error icon\">E-mail name is reqiured.</span>\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div class=\"passwordStatusWrap\">\r\n                    <h2>Strength: \r\n                      <span \r\n                      *ngIf=\r\n                      \"(setupForm.controls['password'].hasError('minlength') && setupForm.controls['password'].hasError('hasCapitalCase'))  \r\n                      || (setupForm.controls['password'].hasError('hasCapitalCase') && setupForm.controls['password'].hasError('hasSpecialCharacters'))  \r\n                      || (setupForm.controls['password'].hasError('hasSpecialCharacters') && setupForm.controls['password'].hasError('minlength'))\" style=\"color:#FF443C\" >\r\n                       Low\r\n                      </span> \r\n                      <span  style=\"color:#FF6100\" *ngIf=\"isMedium && setupForm.controls.password.invalid\">\r\n                        Medium\r\n                      </span> \r\n                      <span style=\"color:#39D02B\" *ngIf=\"setupForm.controls.password.valid\">\r\n                        Strong\r\n                      </span>\r\n                    </h2>\r\n                    <span class=\"pswStatusTxt\">\r\n                      <i [ngClass]=\"setupForm.controls['password'].hasError('required') || setupForm.controls['password'].hasError('minlength') || isCheck==false  ? 'text-danger fa fa-close' : 'text-success fa fa-check'\"></i>\r\n                      At least 8 characters\r\n                    </span>\r\n                    <span class=\"pswStatusTxt\" >\r\n                      <i [ngClass]=\"setupForm.controls['password'].hasError('required') || setupForm.controls['password'].hasError('hasCapitalCase') || isCheck==false  ? 'text-danger fa fa-close' : 'text-success fa fa-check'\"></i>\r\n                      At least 1 capital letter\r\n                    </span>\r\n                    <span class=\"pswStatusTxt\" >    \r\n                      <i [ngClass]=\"setupForm.controls['password'].hasError('required') || setupForm.controls['password'].hasError('hasSpecialCharacters') || isCheck==false ? 'text-danger fa fa-close' : 'text-success fa fa-check'\"></i>\r\n                      At least 1 special character\r\n                    </span>\r\n                  </div> -->\r\n                </div>\r\n                <div class=\"locSetupMailBtnWrap\">\r\n                  <a href=\"javascript:;\" class=\"btnCustomWhite\" (click)=\"save()\">Skip</a>\r\n                  <button href=\"javascript:;\" \r\n                  [ngClass]=\"{'btnDisable':(setupForm.controls.password.invalid && this.isCheck) || (setupForm.controls.email.invalid && this.isSelect)}\" \r\n                  [disabled]=\"(setupForm.controls.password.invalid && this.isCheck) || (setupForm.controls.email.invalid && this.isSelect)\" \r\n                  class=\"btnCustomBlue\" (click)=\"save()\">\r\n                    Continue\r\n                  </button>\r\n                </div>\r\n               \r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"errorMsg col-md-7\" *ngIf=\"errorInfo\">\r\n            {{this.errorMsg}}\r\n          </div>\r\n          <div class=\"col-md-5\">\r\n            <img src=\"assets/localwallet-security-setup-black-white.png\" alt=\"localwallet image\" class=\"stepperMainImg\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottomPartSubmit\" style=\"border-top: 2px solid rgba(255, 255, 255, 0.26); padding-top: 20px; padding-bottom: 10px;\">\r\n      <div class=\"container\">\r\n        <span class=\"infoText\">\r\n          <img src=\"assets/info_circle.svg\" alt=\"\">You can access your Localwallet from your computer only. \r\n        </span>\r\n      </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}