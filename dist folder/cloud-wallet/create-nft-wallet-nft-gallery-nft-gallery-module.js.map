{"version":3,"sources":["./src/app/dashboard/create-nft-wallet/nft-gallery/nft-gallery.module.ts","./src/app/dashboard/create-nft-wallet/nft-gallery/nft-gallery.component.ts","./src/app/dashboard/create-nft-wallet/nft-gallery/nft-gallery.component.html","./src/app/dashboard/create-nft-wallet/nft-gallery/nft-gallery-routing.module.ts"],"names":[],"mappings":"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","file":"create-nft-wallet-nft-gallery-nft-gallery-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n//import { BrowserModule } from '@angular/platform-browser'\r\n\r\nimport { NftGalleryRoutingModule } from './nft-gallery-routing.module';\r\nimport { NftGalleryComponent } from './nft-gallery.component'\r\nimport { LottieModule } from 'ngx-lottie';\r\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClickOutsideModule } from 'ng-click-outside';\r\n@NgModule({\r\n    declarations: [NftGalleryComponent],\r\n    imports: [\r\n        CommonModule,\r\n        //BrowserModule,\r\n        NftGalleryRoutingModule,\r\n        LottieModule,\r\n        ReactiveFormsModule, FormsModule,\r\n        NgbModule,\r\n        ClickOutsideModule\r\n    ]\r\n})\r\nexport class NftGalleryModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\nimport { AnimationItem } from 'lottie-web';\r\n\r\n@Component({\r\n  selector: 'app-nft-gallery',\r\n  templateUrl: './nft-gallery.component.html',\r\n  styleUrls: ['./nft-gallery.component.scss']\r\n})\r\nexport class NftGalleryComponent implements OnInit {\r\n\r\n  public passkeyImage: any = \"\";\r\n  img: any[] = [];\r\n  payload: any;\r\n  tag: any;\r\n  path: string;\r\n  sn: any;\r\n  userLocal: string;\r\n  all: any;\r\n  png;\r\n  slicedstr: string;\r\n  picture: any;\r\n  data: any;\r\n  blob: any;\r\n  arr: string[] = [];\r\n  title1: string[] = [];\r\n  dname1: string[] = [];\r\n  sn1: any[] = [];\r\n  total_sns: any[] = []\r\n  description1: string[] = [];\r\n  title_detail: any;\r\n  desc_detail: any;\r\n  sn_detail: any;\r\n  dname_detail: any;\r\n  domain_name: any;\r\n  img_detail: any[] = [];\r\n  png_detail: any;\r\n  sn_arr: any[] = [];\r\n  sn_arr_all: any[] = [];\r\n  healthProg: any;\r\n  goTODash: boolean;\r\n  healthModal: boolean = false;\r\n  transaction: any;\r\n  diff_sn: any\r\n  frackedcount: any;\r\n  limbocount: any;\r\n  title_name: any;\r\n  fixModal: boolean;\r\n  fixlimboModal: boolean;\r\n  syncTitle: any[] = [];\r\n  titlesToSync: any[] = [];\r\n  dnsToSync: any[] = [];\r\n  showLoader = false;\r\n  loadingMessage: string = '';\r\n  options: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/cloud_loading.json',\r\n  };\r\n  verifiedPng: any;\r\n  verifiedImg: any;\r\n  verifiedDesc: any;\r\n  verifiedSn: any;\r\n  response: any;\r\n  merged = [];\r\n  condition: any;\r\n  hasaccepted : boolean;\r\n\r\n  public nftDetails: boolean;\r\n  public modalOpen: boolean;\r\n  public modalOpen2: boolean;\r\n  public showWalletDropdown: boolean;\r\n  file: any ='Select path';\r\n  WithdrawModal: boolean;\r\n  gallery = [];\r\n  nft_gallery: [{\r\n    nft_sn: number,\r\n    nft_image: string\r\n\r\n  }] = [{\r\n    nft_sn: 0,\r\n    nft_image: \"\"\r\n  }]\r\n  count = 0;\r\n\r\n  constructor(private api: ApiService, private sanitizer: DomSanitizer, private storage: EventService, private router: Router) {\r\n    this.nftDetails = true;\r\n    this.modalOpen = false;\r\n    this.modalOpen2 = false;\r\n    // this.hasaccepted = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userLocal = localStorage.getItem('userLocal');\r\n    if (localStorage.getItem('withdraw_path') != \"\" && localStorage.getItem('withdraw_path') != null && localStorage.getItem('withdraw_path') != undefined) {\r\n      this.file = localStorage.getItem('withdraw_path');\r\n      console.log(\"bye\");\r\n\r\n    } else {\r\n      console.log(\"hye\");\r\n    }\r\n    this.getNftByGroups();\r\n    this.getBalance();\r\n  }\r\n  imgArray = new Array();\r\n\r\n  async getNftByGroups() {\r\n    try {\r\n      let response: any = await this.api.nftGroups();\r\n      if (response.status === \"success\") {\r\n        console.log(response);\r\n        let data = response.payload;\r\n        console.log(data.length)\r\n        for (let i = 0; i < data.length; i++) {\r\n          let png = data[i].PNG\r\n          this.title1[i] = data[i].title\r\n          this.dname1[i] = data[i].domain\r\n          this.description1[i] = data[i].description\r\n          this.sn1[i] = data[i].sns\r\n          this.total_sns[i] = data[i].total_sns\r\n          this.passkeyImage = await fetch(`data:image/png;base64,${png}`);\r\n          const blobs = await this.passkeyImage.blob();\r\n          const newBlob = new Blob([blobs], { type: 'image/png' });\r\n          var downloadURL = window.URL.createObjectURL(blobs);\r\n          var link = document.createElement('a');\r\n          link.href = downloadURL;\r\n          this.blob = link.href;\r\n          this.arr[i] = this.blob\r\n          this.img[i] = this.sanitizer.bypassSecurityTrustResourceUrl(this.blob)\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  async getDetails(snvalue: any) {\r\n    this.modalOpen = !this.modalOpen;\r\n    // this.hasaccepted = true;\r\n    // this.selectImgs(this.sn_detail , this.title_detail , this.dname_detail, true);\r\n\r\n    try {\r\n      var data;\r\n      if (snvalue.length > 1) {\r\n        data = snvalue[0]\r\n        this.sn_arr_all = snvalue;\r\n        this.nftDetails = true\r\n        this.modalOpen2 = true;\r\n\r\n        this.nft_gallery = [{\r\n          nft_sn: 123,\r\n          nft_image: \"\"\r\n        }]\r\n        for (let i = 0; i < snvalue.length; i++) {\r\n          let response: any = await this.api.displayDetails(snvalue[i]);\r\n          if (response.status === \"success\") {\r\n            //console.log(response);\r\n            this.title_detail = response.payload?.hostname\r\n            this.desc_detail = response.payload?.description\r\n            this.sn_detail = response.payload?.sn\r\n            this.dname_detail = response.payload?.domain;\r\n            this.png_detail = response.payload?.PNG\r\n            this.passkeyImage = await fetch(`data:image/png;base64,${this.png_detail}`);\r\n            const blobs = await this.passkeyImage.blob();\r\n            const newBlob = new Blob([blobs], { type: 'image/png' });\r\n            var downloadURL = window.URL.createObjectURL(blobs);\r\n            var link = document.createElement('a');\r\n            link.href = downloadURL;\r\n            this.blob = link.href;\r\n            this.img_detail[i] = this.sanitizer.bypassSecurityTrustResourceUrl(this.blob)\r\n            this.nft_gallery.push({ nft_image: this.img_detail[i], nft_sn: this.sn_detail })\r\n            var count = Object.keys(this.nft_gallery).length\r\n            //console.log(\"count:\" + count)\r\n          }\r\n        }\r\n        var dup_array = this.nft_gallery.splice(0, 1)\r\n        // console.log(\"removed item:\" + dup_array)\r\n        // for (let i = 0; i < count; i++) {\r\n        //   let item = this.nft_gallery[i]\r\n        //   console.log(\"final gallery:\" + item['nft_image'])\r\n        //   console.log(\"final gallery:\" + item['nft_sn'])\r\n        // }\r\n      }\r\n      else {\r\n        data = snvalue\r\n        this.nftDetails = true;\r\n        this.modalOpen2 = false\r\n\r\n        this.nft_gallery = [{\r\n          nft_sn: 123,\r\n          nft_image: \"\"\r\n        }]\r\n\r\n        let response: any = await this.api.displayDetails(data);\r\n        if (response.status === \"success\") {\r\n          console.log(response);\r\n          this.title_detail = response.payload?.hostname\r\n          this.desc_detail = response.payload?.description\r\n          this.sn_detail = response.payload?.sn\r\n          this.dname_detail = response.payload?.domain;\r\n          this.png_detail = response.payload?.PNG\r\n          this.passkeyImage = await fetch(`data:image/png;base64,${this.png_detail}`);\r\n          const blobs = await this.passkeyImage.blob();\r\n          const newBlob = new Blob([blobs], { type: 'image/png' });\r\n          var downloadURL = window.URL.createObjectURL(blobs);\r\n          var link = document.createElement('a');\r\n          link.href = downloadURL;\r\n          this.blob = link.href;\r\n          //console.log(\"image:\" + this.blob)\r\n          this.img_detail[0] = this.sanitizer.bypassSecurityTrustResourceUrl(this.blob)\r\n          //console.log(\"image:\" + this.img_detail)\r\n          this.nft_gallery.push({ nft_image: this.blob, nft_sn: this.sn_detail })\r\n        }\r\n        var dup_array = this.nft_gallery.splice(0, 1)\r\n        //console.log(\"removed item:\" + dup_array)\r\n        var count = Object.keys(this.nft_gallery).length\r\n        console.log(\"count:\" + count)\r\n        for (let i = 0; i < count; i++) {\r\n          let item = this.nft_gallery[i]\r\n          console.log(\"final gallery:\" + item['nft_image'])\r\n          console.log(\"final gallery:\" + item['nft_sn'])\r\n        }\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async download_pngImg() {\r\n    try {\r\n      var data = this.sn_detail\r\n\r\n      let response: any = await this.api.checkPngValidity(data);\r\n      // console.log(data);\r\n      console.log(\"test:\" + this.sn_detail)\r\n      if (response.status === \"success\") {\r\n        this.verifiedPng = response.payload?.Data\r\n        console.log(\"validity :\" + this.verifiedPng);\r\n        this.passkeyImage = await fetch(`data:image/png;base64,${this.verifiedPng}`);\r\n        const blobs = await this.passkeyImage.blob();\r\n        const newBlob = new Blob([blobs], { type: 'image/png' });\r\n        var downloadURL = window.URL.createObjectURL(blobs);\r\n        var link = document.createElement('a');\r\n        link.href = downloadURL;\r\n        link.download = this.title_detail + \".png\";\r\n        link.click();\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n  }\r\n\r\n  withdraw() {\r\n    if (this.sn_arr.length == 0) {\r\n      Swal.fire({\r\n        title: 'Please select an NFT',\r\n        icon: 'info',\r\n        confirmButtonText: 'Okay',\r\n      })\r\n    }\r\n    else {\r\n      this.WithdrawModal = !this.WithdrawModal;\r\n    }\r\n  }\r\n  async getPath() {\r\n    try {\r\n      let response: any = await this.api.filePick();\r\n      console.log(response);\r\n      if (response.status === \"success\") {\r\n        this.file = response?.payload?.items_picked[0];\r\n        localStorage.setItem('withdraw_path', this.file);\r\n        console.log(this.file)\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  async exportBySerialNo() {\r\n    try {\r\n      var data = {\r\n        name: \"NFTs\",\r\n        tag: \"From John\",\r\n        type: \"png\",\r\n        folder: this.file,\r\n        sns: this.sn_arr\r\n      }\r\n      let response: any = await this.api.exportSNs(data);\r\n      console.log(data);\r\n      if (response.status === \"success\") {\r\n        this.doCheck12(response.payload?.id, (data: any) => {\r\n        });\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doCheck12(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          window.location.reload();\r\n          Swal.fire({\r\n            title: \"Successfully withdrawn NFTs.\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { }\r\n          });\r\n          console.log(\"yay! process completed\");\r\n        }\r\n\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheck12(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async selectImgs(snvalue: any, titlevalue: any, dnvalue: any, isChecked: boolean) {\r\n    try {\r\n      //alert(isChecked)\r\n      if (isChecked) {\r\n\r\n        this.merged = this.merged.concat(snvalue);\r\n        this.titlesToSync = this.titlesToSync.concat(titlevalue)\r\n        this.dnsToSync = this.dnsToSync.concat(dnvalue)\r\n        //console.log(\"merged:\" + this.merged)\r\n        //this.titlesToSync.push(titlevalue)\r\n        //this.dnsToSync.push(dnvalue)\r\n        this.sn_arr = this.merged\r\n        for (let i = 0; i < this.sn_arr.length; i++) {\r\n          //console.log(\"if :\" + this.sn_arr)\r\n          //console.log('synctitle:' + this.titlesToSync)\r\n          //console.log('synctitle:' + this.titlesToSync)\r\n        }\r\n      }\r\n      else {\r\n        //console.log(\"snarray :\" + snvalue)\r\n        this.sn_arr.forEach((item, index) => {\r\n          if (snvalue == item) this.sn_arr.splice(index, 1)\r\n          // console.log(\"snvalue:\" + snvalue)\r\n          // console.log(\"item to be removed:\" + item)\r\n          // console.log(\"snarray in else:\" + this.sn_arr)\r\n        });\r\n        this.titlesToSync.forEach((item, index) => {\r\n          if (titlevalue == item) this.titlesToSync.splice(index, 1)\r\n        });\r\n        this.dnsToSync.forEach((item, index) => {\r\n          if (dnvalue == item) this.dnsToSync.splice(index, 1)\r\n        });\r\n      }\r\n      for (let i = 0; i < this.sn_arr.length; i++) {\r\n        console.log(\"final title:\" + this.titlesToSync)\r\n        console.log(\"final:\" + this.sn_arr)\r\n        console.log(\"final dname:\" + this.dnsToSync)\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async getBalance() {\r\n    var data = \"NFTs\";\r\n    try {\r\n      let response: any = await this.api.getTransaction(data);\r\n      this.transaction = response.payload?.balance;\r\n      this.frackedcount = response.payload?.fracked_count;\r\n      this.limbocount = response.payload?.limbo_count;\r\n      console.log(\"balance:\" + response)\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  healthCheck() {\r\n    if (this.transaction === 0) {\r\n      Swal.fire({\r\n        title: \"Wallet is empty.\",\r\n        icon: 'info',\r\n        confirmButtonText: 'Okay',\r\n      }).then((result) => {\r\n        if (result.value) { }\r\n      });\r\n    } else {\r\n      this.healthModal = !this.healthModal;\r\n    }\r\n  }\r\n  frackedCheck() {\r\n    if (this.transaction === 0) {\r\n      Swal.fire({\r\n        title: \"Wallet is empty.\",\r\n        icon: 'info',\r\n        confirmButtonText: 'Okay',\r\n      }).then((result) => {\r\n        if (result.value) { }\r\n      });\r\n    } else {\r\n      this.fixModal = !this.fixModal;\r\n    }\r\n  }\r\n  limboCheck() {\r\n    if (this.transaction === 0) {\r\n      Swal.fire({\r\n        title: \"Wallet is empty.\",\r\n        icon: 'info',\r\n        confirmButtonText: 'Okay',\r\n      }).then((result) => {\r\n        if (result.value) { }\r\n      });\r\n    } else {\r\n      this.fixlimboModal = !this.fixlimboModal;\r\n    }\r\n  }\r\n  async Recycle() {\r\n    try {\r\n      if (this.sn_arr.length == 0) {\r\n        Swal.fire({\r\n          title: 'Please select an NFT',\r\n          icon: 'info',\r\n          confirmButtonText: 'Okay',\r\n        });\r\n        return;\r\n      }\r\n      console.log(\"data from recycle:\" + this.sn_arr)\r\n      //var data = this.sn_arr;\r\n      var name = this.userLocal;\r\n      if (this.sn_arr.length > 0) {\r\n        for (let i = 0; i <= this.sn_arr.length; i++) {\r\n          this.data = this.sn_arr[i]\r\n          // alert(\"sn.arr\" + this.sn_arr[i])\r\n          console.log(\"snarr recycle:\" + this.data)\r\n          let response: any = await this.api.deleteNfts(this.data, name);\r\n          // console.log(data);\r\n          if (response.status === \"success\") {\r\n            console.log(\"recycle call :\" + response)\r\n            Swal.fire({\r\n              title: \"Your NFTs have been successfully turned into coins and your coins have been moved to\" + \" \" + this.userLocal,\r\n              icon: 'success',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) { }\r\n            });\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 3000)\r\n           \r\n            this.router.navigate(['/dashboard/create-nft-gallery'])\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n    setTimeout(() => {\r\n      this.Recycle()\r\n    }, 500)\r\n  }\r\n\r\n  async UploadNft() {\r\n    try {\r\n      this.showLoading(true);\r\n      this.loadingMessage = \"Syncing NFTs...\"\r\n      if (this.titlesToSync.length == 0) {\r\n        Swal.fire({\r\n          title: 'Please select an NFT',\r\n          confirmButtonText: 'Okay',\r\n          icon: 'info'\r\n        })\r\n      }\r\n      for (let i = 0; i < this.titlesToSync.length; i++) {\r\n        var data = {\r\n          host_name: this.titlesToSync[i],\r\n          domain_name: this.dnsToSync[i],\r\n          create_txt: true,\r\n          nft_name: \"NFTs\",\r\n        }\r\n        this.response = await this.api.syncNft(data);\r\n        console.log(data);\r\n        if (this.response.status === \"success\") {\r\n          console.log('wohoo! it works.')\r\n          this.showLoading(false);\r\n          Swal.fire({\r\n            title: \"Successfully synced NFTs\",\r\n            icon: 'info',\r\n            confirmButtonText: 'Okay',\r\n          })\r\n          window.location.reload();\r\n          this.router.navigate(['/dashboard/create-nft-gallery']);\r\n        }\r\n        else {\r\n          this.showLoading(false);\r\n          this.count = this.count + 1;\r\n          // this.title = this.response.payload.message\r\n        }\r\n\r\n      }\r\n      if (this.count >= 1) {\r\n        console.log(this.count)\r\n        Swal.fire({\r\n          title: this.response.payload.message,\r\n          icon: 'error',\r\n          confirmButtonText: 'Okay',\r\n        })\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 3000)\r\n        this.router.navigate(['/dashboard/create-nft-gallery']);\r\n      }\r\n      this.showLoading(false);\r\n      return;\r\n\r\n    }\r\n\r\n\r\n\r\n    catch (e) {\r\n      // this.showLoader = false;\r\n      console.log(e);\r\n    }\r\n    setTimeout(() => {\r\n      this.UploadNft()\r\n    }, 500)\r\n\r\n  }\r\n\r\n\r\n  checkValidity() {\r\n    this.toggleAuthentication();\r\n    this.confirmAuthenticity();\r\n\r\n  }\r\n  async confirmAuthenticity() {\r\n    try {\r\n      var data = this.sn_detail\r\n\r\n      let response: any = await this.api.checkPngValidity(data);\r\n      // console.log(data);\r\n      console.log(\"test:\" + this.sn_detail)\r\n      this.condition = response.status;\r\n      if (response.status === \"success\") {\r\n        this.verifiedPng = response.payload?.Data\r\n        console.log(\"validity :\" + this.verifiedPng);\r\n        this.passkeyImage = await fetch(`data:image/png;base64,${this.verifiedPng}`);\r\n        const blobs = await this.passkeyImage.blob();\r\n        const newBlob = new Blob([blobs], { type: 'image/png' });\r\n        var downloadURL = window.URL.createObjectURL(blobs);\r\n        var link = document.createElement('a');\r\n        link.href = downloadURL;\r\n        this.blob = link.href;\r\n        this.verifiedImg = this.sanitizer.bypassSecurityTrustResourceUrl(this.blob)\r\n        this.confirmDescription();\r\n      } else if (response.status === \"error\") {\r\n        Swal.fire({\r\n          title: response.payload?.message,\r\n          icon: 'error',\r\n          confirmButtonText: 'Okay',\r\n        }).then((result) => {\r\n          if (result.value) {\r\n\r\n          }\r\n        });\r\n      }\r\n\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n  }\r\n\r\n  async confirmDescription() {\r\n    try {\r\n      var data = this.sn_detail\r\n\r\n      let response: any = await this.api.checkDescValidity(data);\r\n      // console.log(data);\r\n      console.log(\"test:\" + this.sn_detail)\r\n      if (response.status === \"success\") {\r\n        this.verifiedDesc = response.payload;\r\n        this.confirmUnique()\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n  }\r\n\r\n  async confirmUnique() {\r\n    try {\r\n      var data = this.sn_detail\r\n\r\n      let response: any = await this.api.checkUniqueValidity(data);\r\n      // console.log(data);\r\n      console.log(\"test:\" + this.sn_detail)\r\n      if (response.status === \"success\") {\r\n        this.verifiedSn = response.payload?.Data[0].Sn;\r\n        console.log(this.verifiedSn)\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n\r\n    }\r\n  }\r\n\r\n  toggleWltFunc() {\r\n    this.showWalletDropdown = !this.showWalletDropdown;\r\n  }\r\n  closeWltFunc() {\r\n    this.showWalletDropdown = false;\r\n  }\r\n\r\n  toggleAuthentication() {\r\n    this.nftDetails = !this.nftDetails;\r\n  }\r\n  modalToggler() {\r\n    this.modalOpen = !this.modalOpen;\r\n    this.nftDetails = true;\r\n  }\r\n\r\n  modalToggler2() {\r\n    this.modalOpen2 = !this.modalOpen2\r\n  }\r\n\r\n  showLoading(state): void {\r\n    this.loadingMessage = '';\r\n    if (state) {\r\n\r\n      this.showLoader = true;\r\n\r\n    } else {\r\n\r\n      this.showLoader = false;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  animationCreated(animationItem: AnimationItem): void {\r\n    console.log(animationItem);\r\n  }\r\n\r\n  getCorrectRoute() {\r\n    this.router.navigate(['/dashboard/create-nft']);\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () { return false; };\r\n  }\r\n  getRoute(){\r\n    this.router.navigate(['/dashboard/import-nft']);\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () { return false; };\r\n  }\r\n  MintToExisting() {\r\n    this.title_name = this.title_detail\r\n    this.domain_name = this.dname_detail\r\n    console.log(\"tab\" + this.title_name)\r\n    if (this.title_name != '') {\r\n      this.router.navigate(['/dashboard/existing-nft'], { queryParams: { title_name: this.title_name, domain_name: this.domain_name, snvalue: this.sn_detail } })\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"nftGalleryWrap\">\r\n    <div class=\"nftGalHeadWrap\">\r\n        <div class=\"headerbackWrap\">\r\n            <img class=\"nft-icon mr-3 \" src=\"assets/nft.png\" alt=\"localwallet icon\">\r\n            <span class=\"titleOne\">NFT Gallery</span>\r\n        </div>\r\n        <div class=\"btnFlexWrap\">\r\n            <a href=\"javascript:;\" class=\"btnCustomBlue\" (click)='getCorrectRoute()'>Create New</a>\r\n            <a href=\"javascript:;\" class=\"btnCustomBlue\" (click)=\"getRoute()\">Import</a>\r\n            <a href=\"javascript:;\" class=\"btnCustomWhite\" (click)=\"healthCheck()\">Verify Coin Authenticity</a>\r\n            <a href=\"javascript:;\" class=\"btnCustomBlue\" *ngIf=\"frackedcount>0\" (click)=\"frackedCheck()\">Fix Fracked</a>\r\n            <a href=\"javascript:;\" class=\"btnCustomBlue\" *ngIf=\"limbocount>0\" (click)=\"limboCheck()\">Fix Limbo</a>\r\n        </div>\r\n        <div class=\"zoom-in\">\r\n            <div class=\"row\">\r\n                <div class=\"p-2\" *ngFor=\"let image of img; let i=index\">\r\n                    <div class=\"nftsHolder checked\">\r\n                        <!-- <label class=\"customCheckboxWrap\">\r\n                        <input type=\"checkbox\" class=\"memCheck\" (change)=\"selectImgs(sn1[i] , title1[i] , dname1[i], $event.target.checked)\">\r\n                        <span class=\"checkmarkCheck\"></span>\r\n                    </label> -->\r\n                        <img class=\"nfts\" [src]=\"img[i]\" alt=\"Image Source\" data-toggle=\"tooltip\"\r\n                            tooltipClass=\"my-custom-class\" data-placement=\"top\"\r\n                            ngbTooltip=\"Total number of copies = {{total_sns[i]}}\" (click)=\"getDetails(sn1[i])\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modalContainer\" *ngIf=\"healthModal\">\r\n        <div class=\"modalOverlay\" (click)=\"this.healthModal = !this.healthModal\"></div>\r\n        <div class=\"modalWrap modalMedium\">\r\n            <div class=\"modalHeader\">\r\n                <h1>Verify NFT Authenticity</h1>\r\n                <div class=\"modalClose\" (click)=\"this.healthModal = !this.healthModal\">\r\n                    <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modalBody\">\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"sectionOne\">\r\n                    <h2 class=\"modalSubhed\">This process verifies the authenticity of your NFTs. If an NFT’s associated\r\n                        coin is found to be fractured or counterfeit, it will be placed in the appropriate folder. Do\r\n                        you want to verify the authenticity of your NFTs?</h2>\r\n                    <!-- <h2 class=\"modalSubhed\">Do you want to check the health of your wallet: NFTs? </h2> -->\r\n                </div>\r\n                <div class=\"gap50\"></div>\r\n            </div>\r\n            <div class=\"modalFooter\">\r\n                <div class=\"buttonWrap\">\r\n                    <button class=\"btnCustomBlue buttonWide\" routerLink=\"/dashboard/functions/nft-health\">Yes</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modalContainer\" *ngIf=\"fixModal\">\r\n        <div class=\"modalOverlay\" (click)=\"this.fixModal = !this.fixModal\"></div>\r\n        <div class=\"modalWrap modalMedium\">\r\n            <div class=\"modalHeader\">\r\n                <h1>Fix Wallet</h1>\r\n                <div class=\"modalClose\" (click)=\"this.fixModal = !this.fixModal\">\r\n                    <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modalBody\">\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"sectionOne\">\r\n                    <h2 class=\"modalSubhed\">Fix your wallet's damaged/fracked coins.</h2>\r\n                    <h2 class=\"modalSubhed\">Do you want to fix your wallet: NFTs? </h2>\r\n                </div>\r\n                <div class=\"gap50\"></div>\r\n            </div>\r\n            <div class=\"modalFooter\">\r\n                <div class=\"buttonWrap\">\r\n                    <button class=\"btnCustomBlue buttonWide\" routerLink=\"/dashboard/functions/fix-nft\">Yes, fix\r\n                        wallet</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modalContainer\" *ngIf=\"fixlimboModal\">\r\n        <div class=\"modalOverlay\" (click)=\"this.fixlimboModal = !this.fixlimboModal\"></div>\r\n        <div class=\"modalWrap modalMedium\">\r\n            <div class=\"modalHeader\">\r\n                <h1>Fix Wallet</h1>\r\n                <div class=\"modalClose\" (click)=\"this.fixlimboModal = !this.fixlimboModal\">\r\n                    <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modalBody\">\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"sectionOne\">\r\n                    <h2 class=\"modalSubhed\">Fix your wallet's limbo coins.</h2>\r\n                    <h2 class=\"modalSubhed\">Do you want to fix your wallet: Nfts? </h2>\r\n                </div>\r\n                <div class=\"gap50\"></div>\r\n            </div>\r\n            <div class=\"modalFooter\">\r\n                <div class=\"buttonWrap\">\r\n                    <button class=\"btnCustomBlue buttonWide\" routerLink=\"/dashboard/functions/fix-nft-limbo\">Yes,\r\n                        fix wallet</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modalContainer\" *ngIf=\"modalOpen\">\r\n        <div class=\"modalOverlay\" (click)=\"modalToggler()\"></div>\r\n        <div class=\"modalWrap modalMedium\">\r\n            <div class=\"modalHeader\">\r\n                <h1>NFT Details</h1>\r\n                <div class=\"ml-auto customdropDownHolder\" (clickOutside)=\"closeWltFunc()\">\r\n                    <a href=\"javascript:;\" class=\"btnCustomBlue\" (click)=\"toggleWltFunc()\"> <span class=\"textWithIcon\">\r\n                            Actions</span><img src=\"assets/caret-down.svg\" alt=\"\" class=\"imgInBtn\">\r\n                    </a>\r\n                    <div class=\"dropDownBox\" *ngIf=\"showWalletDropdown\">\r\n                        <a href=\"javascript:;\" (click)=\"Recycle()\">Recycle</a>\r\n                        <a href=\"javascript:;\" (click)=\"withdraw()\">Withdraw</a>\r\n                        <a href=\"javascript:;\" (click)=\"UploadNft()\"> Publish NFT</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modalClose\" (click)=\"modalToggler()\">\r\n                    <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modalBody\">\r\n                <div class=\"gap20\"></div>\r\n                <ng-container *ngIf=\"nftDetails\">\r\n                    <div class=\"sectionOne\">\r\n                        <h2 class=\"modalSubhed\">{{title_detail}} </h2>\r\n                        <div class=\"gap10\"></div>\r\n                        <h2 class=\"modalDesc\">{{desc_detail}} </h2>\r\n                        <div class=\"gap10\"></div>\r\n                        <div *ngIf=\"!modalOpen2\">\r\n                            <h2 class=\"modalSmDesc\">{{sn_detail}}</h2>\r\n                            <div class=\"gap20\"></div>\r\n                            <div class=\"nftsHolder nftMainImgHolder checked\">\r\n                                <label class=\"customCheckboxWrap\">\r\n                                    <input type=\"checkbox\" class=\"memCheck\"\r\n                                        (change)=\"selectImgs(sn_detail , title_detail , dname_detail, $event.target.checked)\">\r\n                                    <span class=\"checkmarkCheck\"></span>\r\n                                </label>\r\n                                <img [src]=\"img_detail[0]\" alt=\"Image Source\" class=\"nftMainImg\">\r\n                                <!-- <span class=\"dark_mode_text\">{{sn_detail}}</span> -->\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"modalOpen2\">\r\n                            <div class=\"row\">\r\n                                <div class=\"p-2\" *ngFor='let value of nft_gallery '>\r\n                                    <div class=\"nftsHolderSm checked\">\r\n                                        <label class=\"customCheckboxWrap\">\r\n                                            <input type=\"checkbox\" class=\"memCheck\"\r\n                                                (change)=\"selectImgs(value.nft_sn,title_detail , dname_detail,$event.target.checked)\">\r\n                                            <span class=\"checkmarkCheck\"></span>\r\n                                        </label>\r\n                                        <img [src]=\"value.nft_image\" alt=\"Image Source\"\r\n                                            style=\"width:auto; height: 200px; padding-left: 5px; \">\r\n                                        <span class=\"dark_mode_text\">{{value.nft_sn}}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- <h2 class=\"modalSmDesc\">{{sn_detail}}</h2>\r\n                    <div class=\"gap20\"></div>\r\n                    <div class=\"nftMainImgHolder\">\r\n                        <img [src]=\"img_detail\" alt=\"\" class=\"nftMainImg\">\r\n                    </div>\r\n                </div> -->\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!nftDetails\">\r\n                    <div class=\"authenticity_wrap\">\r\n                        <div class=\"auth_left_panel\">\r\n                            <div class=\"sectionOne\">\r\n                                <h2 class=\"modalDesc\">{{desc_detail}}</h2>\r\n                                <div class=\"gap10\"></div>\r\n                                <div *ngIf=\"!modalOpen2\">\r\n                                    <h2 class=\"modalSmDesc\">{{sn_detail}}</h2>\r\n                                    <div class=\"gap20\"></div>\r\n                                    <div class=\"nftMainImgHolder\">\r\n                                        <img [src]=\"img_detail[0]\" alt=\"\" class=\"nftMainImg nftMainImgSm\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf=\"modalOpen2\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-3 col-md-3 col-6 p-1 m-2\" *ngFor='let value of nft_gallery '>\r\n                                            <div class=\"nftsHolder\">\r\n                                                <img [src]=\"value.nft_image\" alt=\"Image Source\"\r\n                                                    style=\"width: 100%; height:100%; padding-left: 5px;\">\r\n                                                <span style=\"padding: 20px; font-size: 10px;\">{{value.nft_sn}}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- <h2 class=\"modalSmDesc\">{{sn_detail}} </h2>\r\n                            <div class=\"gap20\"></div>\r\n                            <div class=\"nftMainImgHolder\">\r\n                                <img [src]=\"img_detail\" alt=\"\" class=\"nftMainImg nftMainImgSm\">\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n\r\n                        <div class=\"auth_right_panel\">\r\n                            <div class=\"sectionOne\">\r\n                                <div *ngIf=\"condition=='success'\">\r\n                                    <h2 class=\"modalDesc\">{{verifiedDesc}}</h2>\r\n                                    <div class=\"gap10\"></div>\r\n                                    <h2 class=\"modalSmDesc\">{{verifiedSn}}</h2>\r\n                                    <div class=\"gap20\"></div>\r\n                                    <div class=\"nftMainImgHolder\">\r\n                                        <img [src]=\"verifiedImg\" alt=\"\" class=\"nftMainImg nftMainImgSm\">\r\n                                    </div>\r\n                                    <div class=\"gap10\"></div>\r\n                                    <button class=\"btnCustomWhite\" (click)=\"download_pngImg()\">Download PNG</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"gap50\"></div>\r\n            </div>\r\n\r\n            <div class=\"modalFooter\">\r\n                <ng-container *ngIf=\"nftDetails\">\r\n                    <div class=\"buttonWrap\">\r\n                        <button class=\"btnCustomBlue\" (click)=\"checkValidity()\">Confirm Authenticity</button>\r\n                        <button class=\"btnCustomBlue m-2\" (click)='MintToExisting()'>Make Copies</button>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!nftDetails\">\r\n                    <div class=\"buttonWrap\">\r\n                        <button class=\"btnCustomBlue\" (click)=\"toggleAuthentication()\">Back</button>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modalContainer1\" *ngIf=\"WithdrawModal\">\r\n        <div class=\"modalOverlay1\" (click)=\"this.WithdrawModal = !this.WithdrawModal\"></div>\r\n        <div class=\"modalWrap modalMedium\">\r\n            <div class=\"modalHeader\">\r\n                <h1>Withdraw NFT</h1>\r\n                <div class=\"modalClose\" (click)=\"this.WithdrawModal = !this.WithdrawModal\">\r\n                    <img src=\"assets/close-white.svg\" alt=\"icon\">\r\n                </div>\r\n            </div>\r\n            <div class=\"modalBody\">\r\n                <div class=\"gap20\"></div>\r\n                <div class=\"sectionOne\">\r\n                    <div class=\"formField\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <label for=\"username\">Withdraw to :</label>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"filepicker\">\r\n                                    <span>{{file}}</span>\r\n                                    <div class=\"icon_wrap\" (click)=\"getPath()\">\r\n                                        <img src=\"assets/folder_icon.svg\" alt=\"\" class=\"folderIcon\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"gap50\"></div>\r\n                </div>\r\n                <div class=\"modalFooter\">\r\n                    <div class=\"buttonWrap\">\r\n                        <button class=\"btnCustomBlue buttonWide\" (click)=\"exportBySerialNo()\">Yes,\r\n                            Withdraw</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"onEventLoadWrap\" *ngIf=\"showLoader\">\r\n            <ng-container>\r\n                <div class=\"text-center  loader_show\">\r\n                    <ng-lottie height=\"150px\" [options]=\"options\" (animationCreated)=\"animationCreated($event)\">\r\n                    </ng-lottie>\r\n                    <span style=\"color:#ffffff\">{{loadingMessage}}</span>\r\n                </div>\r\n            </ng-container>\r\n        </div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n//import { BrowserModule } from '@angular/platform-browser'\r\nimport { NftGalleryComponent } from './nft-gallery.component'\r\nimport { CommonModule } from '@angular/common';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: NftGalleryComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes),\r\n        //BrowserModule,\r\n        CommonModule\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class NftGalleryRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}