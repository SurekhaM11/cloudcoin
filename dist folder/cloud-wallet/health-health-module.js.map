{"version":3,"sources":["./src/app/dashboard/functions/health/health.module.ts","./src/app/dashboard/functions/health/health-routing.module.ts","./src/app/dashboard/functions/health/health.component.ts","./src/app/dashboard/functions/health/health.component.html"],"names":[],"mappings":"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","file":"health-health-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HealthRoutingModule } from './health-routing.module';\r\nimport { HealthComponent } from './health.component';\r\nimport { LottieModule } from 'ngx-lottie';\r\n@NgModule({\r\n  declarations: [HealthComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HealthRoutingModule,\r\n    LottieModule\r\n  ]\r\n})\r\nexport class HealthModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HealthComponent } from './health.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HealthComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HealthRoutingModule { }\r\n","import { KeyValue } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AnimationItem } from 'lottie-web';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport Swal from 'sweetalert2';\r\n@Component({\r\n  selector: 'app-health',\r\n  templateUrl: './health.component.html',\r\n  styleUrls: ['./health.component.scss']\r\n})\r\nexport class HealthComponent implements OnInit {\r\n  type: string;\r\n  userSky: string;\r\n  userLocal: string;\r\n  payload: any;\r\n  healthProg: any;\r\n  goTODash: boolean;\r\n  syncProg: any;\r\n  fixSkyvault: boolean = false;\r\n  showLoader: boolean = false;\r\n  valueAscOrder: any;\r\n  options: AnimationOptions = {\r\n    path: 'https://raida11.cloudcoin.global/animation/cloud_loading.json'\r\n  };\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    public router: Router\r\n  ) {\r\n    this.type = localStorage.getItem('wallet');\r\n    this.userSky = localStorage.getItem('userSky');\r\n    this.userLocal = localStorage.getItem('userLocal');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.type === 'localwallet') {\r\n      this.checkhealth();\r\n    } else {\r\n      this.checkSky();\r\n    }\r\n  }\r\n\r\n  returnZero() {\r\n    return 0\r\n  }\r\n  async checkhealth() {\r\n    try {\r\n      var data = {\r\n        name: this.userLocal\r\n      }\r\n      let response: any = await this.api.health(data);\r\n      if (response.status == \"success\") {\r\n        this.doCheckHealth(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doCheckHealth(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.healthProg = this.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.goTODash = true;\r\n        } else {\r\n          // this.goTODash = true;\r\n          if (this.payload?.data?.message == \"No coins to detect\") {\r\n            Swal.fire({\r\n              title: \"Fracked coins found. Use the Fix Fracked tool to fix them.\",\r\n              icon: 'info',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                {\r\n                  this.router.navigate(['/dashboard/home'])\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: this.payload.data.message,\r\n              icon: 'error',\r\n              confirmButtonText: 'Okay',\r\n            }).then((result) => {\r\n              if (result.value) {\r\n                {\r\n                  this.router.navigate(['/dashboard/home'])\r\n                }\r\n              }\r\n            });\r\n          }\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheckHealth(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async checkSky() {\r\n    try {\r\n      var data = {\r\n        name: this.userSky\r\n      }\r\n      let response: any = await this.api.skyhealth(data);\r\n      console.log(response);\r\n      if (response.status == \"success\") {\r\n        this.doCheckSkyHealth(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  getColor(bal: any) {\r\n    if (bal === 1 || bal > 1) {\r\n      return 'green';\r\n    } else if (bal === 0) {\r\n      return 'red';\r\n    }\r\n  }\r\n\r\n  getBalColor(status: any) {\r\n    if (status == 1) {\r\n      return 'green';\r\n    } else if (status == 2) {\r\n      return 'red';\r\n    } else if (status == 3 || status == 5) {\r\n      return 'gray';\r\n    } else if (status == 4) {\r\n      return 'yellow';\r\n    }\r\n  }\r\n\r\n  checkQuorum(quor: any) {\r\n    var x = this.syncProg?.data?.quorum_sns.some(x => { return x == quor });\r\n    if (x == true) {\r\n      return 'green';\r\n    } else {\r\n      return 'red';\r\n    }\r\n  }\r\n\r\n  async doCheckSkyHealth(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      this.syncProg = this.payload;\r\n      // Array.from(this.syncProg?.data?.sns).sort((a,b) => a-b);\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        var sync = this.syncProg?.data?.sns || {};\r\n        if (Object.keys(sync).length === 0) {\r\n          Swal.fire({\r\n            title: \"There are no coins to sync\",\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              {\r\n                this.router.navigate(['/dashboard/home']);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        if (this.payload.status == \"completed\") {\r\n          this.goTODash = true;\r\n        } else {\r\n          this.goTODash = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        var sync = this.syncProg?.data?.sns;\r\n        sync = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n          return a.value.localeCompare(b.value);\r\n        }\r\n        console.log(sync);\r\n\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doCheckSkyHealth(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async fixSky() {\r\n    try {\r\n      var data = {\r\n        name: this.userSky,\r\n        sync_items: this.syncProg?.data?.sns\r\n      }\r\n      let response: any = await this.api.fixSky(data);\r\n      if (response.status == \"success\") {\r\n        this.showLoading(true);\r\n        this.doFixsky(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async doFixsky(taskID: any, xdata: any) {\r\n    let task: any = await this.api.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          this.showLoading(false);\r\n          this.fixSkyvault = true;\r\n        } else {\r\n          this.showLoading(false);\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'error',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        this.doFixsky(taskID, xdata)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  async syncOne(item: any) {\r\n    try {\r\n      var data = {\r\n        name: this.userSky,\r\n        sync_items: { [item.key]: item.value }\r\n      }\r\n      let response: any = await this.api.fixSky(data);\r\n      if (response.status == \"success\") {\r\n        this.showLoading(true);\r\n        this.doFixsky(response.payload?.id, (data: any) => { })\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  showLoading(state): void {\r\n    if (state) {\r\n      this.showLoader = true;\r\n    } else {\r\n      this.showLoader = false;\r\n    }\r\n  }\r\n\r\n  animationCreated(animationItem: AnimationItem): void {\r\n    console.log(animationItem);\r\n  }\r\n\r\n  again() {\r\n    this.goTODash = !this.goTODash;\r\n    this.fixSkyvault = !this.fixSkyvault;\r\n    this.syncProg.progress = 0;\r\n    this.checkSky();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"transWrapper\" *ngIf=\"type === 'localwallet'\">\r\n    <div class=\"headerbackWrap\">\r\n        <a href=\"javascript:;\" routerLink=\"/dashboard/home\" class=\"backBtnInHeader\"><img src=\"assets/arrow.svg\"\r\n                alt=\"\"></a>\r\n        <span class=\"titleOne\">Health Check</span>\r\n    </div>\r\n    <div class=\"gap20\"></div>\r\n    <div class=\"transBody\">\r\n        <p class=\"subTitleTwo\">Health Check will ensure that all your coins are 100% authentic. It will move coins to\r\n            the Fractured (Fracked) or Counterfeit folder if they are not 100% authentic.</p>\r\n        <div class=\"headthSubHed\">\r\n            <h4>Verifying Coin Authenticity for the Wallet: <span>{{userLocal}}</span></h4>\r\n        </div>\r\n        <div class=\"lineSection\">\r\n            <div class=\"progressWrap\" *ngIf=\"!goTODash\">\r\n                <div class=\"progress\">\r\n                    <div class=\"progress-bar progress-bar-striped\"  role=\"progressbar\"  style=\"background-color: green!important;\"\r\n                        [ngStyle]=\"{'width': healthProg?.progress < 15 ? 15 + healthProg?.progress + '%' :  healthProg?.progress + '%'}\"\r\n                        aria-valuenow=\"55\" aria-valuemin=\"0\" aria-valuemax=\"100\">Checking\r\n                        coins...\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"formField\" *ngIf=\"healthProg?.progress === '100'\">\r\n                <div class=\"checkboxInpHolder\">\r\n                    <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Coin Verification process\r\n                        completed.</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"gap10\"></div>\r\n            <div class=\"healthList\" *ngIf=\"goTODash && healthProg?.status === 'completed'\">\r\n                <div class=\"healthListDiv\">\r\n                    <p>Total coins found to be perfectly authentic:</p>\r\n                    <h6>{{this.healthProg?.data?.TotalAuthentic}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                    <p>Total coins found to be authentic but fractured:</p>\r\n                    <h6>{{this.healthProg?.data?.TotalFracked + this.healthProg?.data?.TotalAlreadyFracked}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                    <p>Total coins found to be counterfeit:</p>\r\n                    <h6>{{this.healthProg?.data?.TotalCounterfeit}}</h6>\r\n                </div>\r\n                <!-- <div class=\"healthListDiv\">\r\n                    <p>Total Coins that are already fracked:</p>\r\n                    <h6>{{this.healthProg?.data?.TotalAlreadyFracked}}</h6>\r\n                </div> -->\r\n                <div class=\"healthListDiv\">\r\n                    <p>Total Errors:</p>\r\n                    <h6>{{this.healthProg?.data?.TotalErrors}}</h6>\r\n                </div>\r\n                <div class=\"healthListDiv\">\r\n                    <p>Total Coins:</p>\r\n                    <h6>{{this.healthProg?.data?.TotalCoins}}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"transBottomFooter\">\r\n        <button class=\"btnCustomBlue\" [ngClass]=\"{'btnDisable': goTODash === false}\"\r\n            (click)=\"goTODash ? router.navigate(['/dashboard/home']) : ''\">close</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"transWrapper\" *ngIf=\"type === 'skywallet'\">\r\n    <div class=\"headerbackWrap\">\r\n        <a href=\"javascript:;\" routerLink=\"/dashboard/home\" class=\"backBtnInHeader\"><img src=\"assets/arrow.svg\"\r\n                alt=\"\"></a>\r\n        <span class=\"titleOne\">Synchronize SkyVault</span>\r\n    </div>\r\n    <div class=\"gap20\"></div>\r\n    <div class=\"transBody\" *ngIf=\"!fixSkyvault\">\r\n        <p class=\"subTitleTwo\">This will ensure that the CCs in your SkyVault account are synchronized on all\r\n            RAIDA.</p>\r\n        <div class=\"lineSection\">\r\n            <div *ngIf=\"!goTODash\">\r\n                <div class=\"progressWrap\">\r\n                    <div class=\"progress\">\r\n                        <div class=\"progress-bar progress-bar-striped\" role=\"progressbar\" style=\"background-color: green!important;\"\r\n                            [ngStyle]=\"{'width': syncProg?.progress < 20 ? 18 + syncProg?.progress + '%' :(syncProg?.progress - 5) + '%'}\"\r\n                            aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\">Checking coins in your SkyVault...\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"formField\" *ngIf=\"syncProg?.progress == '100' && goTODash\">\r\n                    <div class=\"checkboxInpHolder\">\r\n                        <img src=\"assets/green-check.svg\" alt=\"icon\"> <span style=\"color: #2a4;\"> Damaged coins\r\n                            have been fixed.</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"gap10\"></div>\r\n            <div *ngIf=\"goTODash\">\r\n                <div>\r\n                    <p class=\"subTitleTwo\">You can click SYNC to synchronize your SkyVault on all RAIDA. You can also\r\n                        click\r\n                        on a\r\n                        serial number to fix a single coin.</p>\r\n                </div>\r\n                <div class=\"gap10\"></div>\r\n                <table class=\"text-white table-responsive-sm\">\r\n                    <tr>\r\n                        <th>\r\n                            <div class=\"colorBox mr-1\" style=\"background-color: green;\"></div>Coin is in SkyVault.\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"colorBox mr-1 ml-2\" style=\"background-color: red;\"></div>Coin is not in SkyVault.\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"colorBox mr-1 ml-2\" style=\"background-color: gray;\"></div>Server is down and not\r\n                            attempted.\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"colorBox mr-1 ml-2\" style=\"background-color: yellow;\"></div>Failed to\r\n                            secure new authentication keys.\r\n                        </th>\r\n                    </tr>\r\n                </table>\r\n                <div class=\"gap10\"></div>\r\n                <div class=\"healthListDiv\">\r\n                    <table class=\"text-white table table-bordered table-responsive-sm text-center\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>R0</th>\r\n                            <th>R1</th>\r\n                            <th>R2</th>\r\n                            <th>R3</th>\r\n                            <th>R4</th>\r\n                            <th>R5</th>\r\n                            <th>R6</th>\r\n                            <th>R7</th>\r\n                            <th>R8</th>\r\n                            <th>R9</th>\r\n                            <th>R10</th>\r\n                            <th>R11</th>\r\n                            <th>R12</th>\r\n                            <th>R13</th>\r\n                            <th>R14</th>\r\n                            <th>R15</th>\r\n                            <th>R16</th>\r\n                            <th>R17</th>\r\n                            <th>R18</th>\r\n                            <th>R19</th>\r\n                            <th>R20</th>\r\n                            <th>R21</th>\r\n                            <th>R22</th>\r\n                            <th>R23</th>\r\n                            <th>R24</th>\r\n                            <th>RES</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Balance</td>\r\n                            <td *ngFor=\"let balance of syncProg?.data?.balances;let i = index;\"\r\n                                [ngStyle]=\"{'background-color' : getColor(balance,i)}\">{{balance}}</td>\r\n                            <td [ngStyle]=\"{'background-color' : getColor(syncProg?.data?.quorum_balance)}\">\r\n                                {{syncProg?.data?.quorum_balance}}</td>\r\n                        </tr>\r\n                        <tr *ngFor=\"let sns of syncProg?.data?.sns | keyvalue: returnZero; let i = index;\">\r\n                            <td><a class=\"text-blue\" style=\"cursor: pointer;\" (click)=\"syncOne(sns)\">{{sns.key}}</a>\r\n                            </td>\r\n                            <td *ngFor=\"let elem of sns.value\" [ngStyle]=\"{'background-color' : getBalColor(elem)}\">\r\n                                <span [ngClass]=\"elem == 1 ? 'fa fa-check' : 'fa fa-minus'\"></span>\r\n                            </td>\r\n                            <td [ngStyle]=\"{'background-color' : checkQuorum(sns.key) }\">\r\n                                <span\r\n                                    [ngClass]=\"checkQuorum(sns.key) == 'green' ? 'fa fa-check' : 'fa fa-minus'\"></span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"transBody\" *ngIf=\"fixSkyvault\">\r\n        <h4 class=\"text-white\">Synchronization complete for the SkyVault: <span>{{userSky}}</span></h4>\r\n        <p class=\"subTitleTwo\">A request to synchronize your SkyVault was sent to the RAIDA. Please check your\r\n            SkyVault status again to see if the synchronization was completed.</p>\r\n        <div class=\"gap20\"></div>\r\n        <div>\r\n            <button class=\"btnCustomBlue\" routerLink=\"/dashboard/functions/health_check\" (click)=\"again()\">View SkyVault\r\n                Status</button>\r\n            <button class=\"btnCustomBlue ml-3\" (click)=\"goTODash ? router.navigate(['/dashboard/home']) : ''\"\r\n                *ngIf=\"fixSkyvault\">Close</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"transBottomFooter\">\r\n        <button class=\"btnCustomBlue\" [ngClass]=\"{'btnDisable': syncProg?.status != 'completed'}\" (click)=\"fixSky()\"\r\n            *ngIf=\"!fixSkyvault\">SYNC</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"onEventLoadWrap\" *ngIf=\"showLoader\">\r\n    <ng-container>\r\n        <div class=\"text-center loader_show\">\r\n            <ng-lottie height=\"150px\" [options]=\"options\" (animationCreated)=\"animationCreated($event)\"></ng-lottie>\r\n            <span style=\"color:#ffffff\">Syncing SkyVault with RAIDA...</span>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}