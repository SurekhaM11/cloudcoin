{"version":3,"sources":["./src/app/dashboard/create-localwallet-dash/upload-cc/upload-cc.module.ts","./src/app/dashboard/create-localwallet-dash/upload-cc/upload-cc-routing.module.ts","./src/app/dashboard/create-localwallet-dash/upload-cc/upload-cc.component.ts","./src/app/dashboard/create-localwallet-dash/upload-cc/upload-cc.component.html"],"names":[],"mappings":"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","file":"upload-cc-upload-cc-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UploadCcComponent } from './upload-cc.component';\r\nimport { UploadCcRoutingModule } from './upload-cc-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [UploadCcComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UploadCcRoutingModule\r\n  ]\r\n})\r\nexport class UploadCcModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UploadCcComponent } from './upload-cc.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UploadCcComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UploadCcRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-upload-cc',\r\n  templateUrl: './upload-cc.component.html',\r\n  styleUrls: ['./upload-cc.component.scss']\r\n})\r\nexport class UploadCcComponent implements OnInit {\r\n\r\n  detect: boolean = false;\r\n  successInfo: boolean = false;\r\n  successMsg: any = '';\r\n  errorInfo: boolean = false;\r\n  errorMsg: any = '';\r\n  raidaCheck: boolean = false;\r\n  payload: any = null;\r\n  taskId: any = null;\r\n  serversList: any;\r\n  showError: boolean = false;\r\n  isSelect: boolean;\r\n  user: any;\r\n  fileName: string = '';\r\n  userLocal: any;\r\n  baseAdd: any;\r\n  file: any;\r\n  btn: boolean = false;\r\n\r\n  constructor(private raida: ApiService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userLocal = localStorage.getItem('userLocal');\r\n  }\r\n\r\n  getUploadedFiles(files) {\r\n    this.fileName = files.target.files[0].name;\r\n    this.btn = false;\r\n    this.successInfo = false;\r\n    this.errorInfo = false;\r\n    let reader = new FileReader();\r\n    let file = files.target.files[0];\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      console.log(reader.result)\r\n      this.baseAdd = reader.result\r\n    }\r\n  }\r\n\r\n\r\n  //  async doCheck(taskID: any, xdata: any){\r\n  //   let task:any = await this.raida.doCheck(taskID);\r\n  //     console.log(\"Task done: \", task);\r\n\r\n  //     if(task){\r\n  //       this.payload = task.payload;\r\n  //       if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n  //         if(this.payload.status == \"completed\"){\r\n  //           this.router.navigate(['/localwallet/localstep-completed'])\r\n  //         }\r\n  //         let data = this.payload.data;\r\n  //         this.successMsg = \"Done: \" + data.message;\r\n  //         let h = \"\";\r\n  //         this.raidaCheck = true;\r\n  //         this.serversList = h;\r\n  //         this.errorInfo = false;\r\n  //         return;\r\n  //       }\r\n  //       this.successMsg = \"Doing.... Task ID \" + taskID + \", Progress \" + this.payload.progress + \"%\";\r\n  //       setTimeout(() => {\r\n  //         this.doCheck(taskID, xdata)\r\n  //       },1000)\r\n\r\n  //     }\r\n  //     else{\r\n  //       this.errorInfo = true;\r\n  //       this.successInfo = false;\r\n  //       this.errorMsg = \"Call Failed\";\r\n  //     }\r\n  // }\r\n\r\n  // async detectWallet(File){\r\n  //   this.raidaCheck = true;\r\n  //     try{\r\n  //       var cs = JSON.parse(File);\r\n  //       if(cs.cloudcoin.length !== 0){\r\n  //       }\r\n  //     }\r\n  //     catch(e) {\r\n  //       this.detect = false;\r\n  //       this.errorInfo = true;\r\n  //       this.successInfo =false;\r\n  //       this.errorMsg = \"Failed to parse json\";\r\n  //    } \r\n  //    let idata = {\r\n  //     coins: [\r\n  //      { 'sn':parseInt('sn'),\r\n  //       'ans': String\r\n  //     }\r\n  //   ]\r\n  //  }\r\n\r\n  //   for (let i = 0; i < cs?.cloudcoin?.length; i++) {\r\n  //     let cc = cs.cloudcoin[i]\r\n  //     idata.coins[i] =  {\r\n  //     'sn': parseInt(cc.sn, 10),\r\n  //     'ans': cc.an\r\n  //   }\r\n  // }\r\n\r\n  //   let detection: any = await this.raida.detect(JSON.stringify(idata));\r\n  //   console.log(detection, \"response\");\r\n  //   if(detection.status == 'success'){\r\n  //     this.raidaCheck = true;\r\n  //     this.successInfo = true;\r\n  //     this.errorInfo = false;\r\n  //     let taskId = detection.payload\r\n  //     this.successMsg = \"Detect sent. Task ID \" + taskId.id;\r\n  //     this.doCheck(taskId.id, (data: any)=>{\r\n  //       this.successInfo = true;\r\n  //       this.successMsg  =\"Done \" + JSON.stringify(data)\r\n  //     })\r\n  //   }\r\n  //   else{\r\n  //     this.errorInfo = true;\r\n  //     this.successInfo = false;\r\n  //     this.errorMsg = \"Failed \" + detection.payload.message;\r\n  //   }\r\n\r\n  // }\r\n\r\n  async doCheck(taskID: any, xdata: any) {\r\n    let task: any = await this.raida.doCheck(taskID);\r\n    console.log(\"Task done: \", task);\r\n    if (task) {\r\n      this.payload = task.payload;\r\n      if (this.payload.status == \"error\" || this.payload.status == \"completed\") {\r\n        if (this.payload.status == \"completed\") {\r\n          localStorage.setItem('wallet', \"localwallet\");\r\n          Swal.fire({\r\n            title: \"Localwallet created successfully.\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              {\r\n                let currentUrl = this.router.url;\r\n                this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n                this.router.onSameUrlNavigation = 'reload';\r\n                this.router.navigate([currentUrl]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.btn = true;\r\n          Swal.fire({\r\n            title: this.payload.data.message,\r\n            icon: 'warning',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) { { } }\r\n          });\r\n        }\r\n        if (this.payload.data.limbo != 0) {\r\n          Swal.fire({\r\n            title: 'Contact was lost with the RAIDA during your request due to loss of internet connectivity. It is unknown if the coin passwords have been changed. This can be fixed once a solid internet connection is restored.',\r\n            icon: 'warning',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              {\r\n                let currentUrl = this.router.url;\r\n                this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n                this.router.onSameUrlNavigation = 'reload';\r\n                this.router.navigate([currentUrl]);\r\n                this.router.navigate([\"/dashboard/home\"]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        else if (this.payload.data.counterfeit != 0) {\r\n          Swal.fire({\r\n            title: this.payload.data.counterfeit + ' Counterfeit CC found!',\r\n            icon: 'info',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              {\r\n                let currentUrl = this.router.url;\r\n                this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n                this.router.onSameUrlNavigation = 'reload';\r\n                this.router.navigate([currentUrl]);\r\n                this.router.navigate([\"/dashboard/home\"]);\r\n              }\r\n            }\r\n          });\r\n\r\n\r\n        }\r\n        else if (this.payload.data.fracked != 0) {\r\n          Swal.fire({\r\n            title: this.payload.data.fracked + ' Fracked CC found!',\r\n            icon: 'info',\r\n            confirmButtonText: 'Okay',\r\n          }).then((result) => {\r\n            if (result.value) {\r\n              {\r\n                let currentUrl = this.router.url;\r\n                this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n                this.router.onSameUrlNavigation = 'reload';\r\n                this.router.navigate([currentUrl]);\r\n                this.router.navigate([\"/dashboard/home\"]);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        let data = this.payload.data;\r\n        this.successInfo = true;\r\n        this.successMsg = \"Done: \" + this.payload.message;\r\n        let h = \"\";\r\n        this.raidaCheck = true;\r\n        this.serversList = h;\r\n        this.errorInfo = false;\r\n        return;\r\n      }\r\n      this.successInfo = true;\r\n      this.successMsg = \"Doing.... Task ID \" + taskID + \", Progress \" + this.payload.progress + \"%\";\r\n      setTimeout(() => {\r\n        this.doCheck(taskID, xdata)\r\n      }, 500)\r\n\r\n    }\r\n    else {\r\n      this.errorInfo = true;\r\n      this.successInfo = false;\r\n      this.errorMsg = \"Call Failed\";\r\n      this.btn = true;\r\n    }\r\n  }\r\n\r\n  async next() {\r\n    // console.log(this.file[0]?.name);\r\n    var file = this.baseAdd.split(',')[1];\r\n    try {\r\n      var data = {\r\n        name: this.userLocal,\r\n        items: [{\r\n          type: 'inline',\r\n          data: file\r\n        }]\r\n      }\r\n      let response: any = await this.raida.import(data);\r\n      this.doCheck(response.payload?.id, (data: any) => {\r\n        this.successInfo = true;\r\n        this.successMsg = \"Done \" + JSON.stringify(data)\r\n      })\r\n    }\r\n    catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    localStorage.setItem('wallet', \"localwallet\");\r\n    Swal.fire({\r\n      title: \"Localwallet created successfully.\",\r\n      icon: 'success',\r\n      confirmButtonText: 'Okay',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        {\r\n          let currentUrl = this.router.url;\r\n          this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n          this.router.onSameUrlNavigation = 'reload';\r\n          this.router.navigate([currentUrl]);\r\n          this.router.navigate([\"/dashboard/home\"]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"gap10\"></div>\r\n<div class=\"gap20\"></div>\r\n<div class=\"transWrapper\">\r\n  <div class=\"headerbackWrap border-0\">\r\n      <a href=\"javascript:;\" routerLink=\"/dashboard/create-localwallet-dash\" class=\"backBtnInHeader\"><img src=\"assets/arrow.svg\" alt=\"\"></a>\r\n  </div>\r\n  <div class=\"transBody\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n          <h2 class=\"titleOne\">Deposit CC to Your Wallet</h2>\r\n          <p class=\"titleTwo\" style=\"opacity: 0.8;\">CloudCoins are files with verification keys inside. You can import files with the following extension: png, stack, cc and zip.</p>\r\n          <div class=\"gap10\"></div>\r\n\r\n          <div class=\"skyAddressFieldWrap\">\r\n            <div class=\"formField\">\r\n              <label for=\"username\">Deposit CC</label>\r\n              <div class=\"uploadFileWrap\">\r\n                  <span>{{fileName || \"Choose coins to deposit.\"}}</span>\r\n                  <div class=\"uploadIconWrap\">\r\n                    <input type=\"file\" (change)=\"getUploadedFiles($event)\" accept=\".png, .id, .bin\">\r\n                    <img src=\"assets/folder_icon.svg\" alt=\"\" class=\"folderIcon\">\r\n                  </div>\r\n              </div>\r\n                <ng-container>\r\n                  <span class=\"errorMsg\" *ngIf=\"errorInfo\"><img src=\"assets/error_info_icon.svg\" alt=\"error icon\">{{this.errorMsg}}</span>\r\n                  <span class=\"successMsg\" *ngIf=\"successInfo\"><img src=\"assets/info_green.svg\" alt=\"error icon\"> {{this.successMsg}}</span>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"gap20\"></div>\r\n            <div class=\"uploadBtnWrap\">\r\n              <a href=\"javascript:;\" [ngClass]=\"{'btnDisable' : this.btn == true}\" class=\"btnCustomBlue btnLarge\" (click)=\"next()\">Deposit to my Wallet.</a>\r\n              <a href=\"javascript:;\" class=\"btnCustomBlue ml-2\" (click)=\"skip()\">I'll deposit later.</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <img src=\"assets/localwallet-upload-cc-black-white.png\" alt=\"rocket image\" class=\"stepperMainImg\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n      <div class=\"transBottomFooter\">\r\n        <div class=\"bottomPartSubmit\" style=\"border-top: 2px solid rgba(255, 255, 255, 0.26); padding-top: 20px; padding-bottom: 10px;\">\r\n          <div class=\"container\">\r\n            <span class=\"infoText\">\r\n              <img src=\"assets/info_circle.svg\" alt=\"\">You can learn where to get CC by going to https://CloudCoin.global.\r\n            </span>\r\n            <span class=\"infoText\">\r\n              <img src=\"assets/info_circle.svg\" alt=\"\">Receive files that contain CC from your friends/colleagues and upload them here or later inside the application.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}